{"version":3,"sources":["containers/LoginLayout.tsx","containers/styles.tsx","containers/LinkComponent.tsx","constants/spotifyRequestType.ts","actions/albumAction.ts","containers/album/AlbumLayoutComponent.tsx","actions/artistAction.ts","containers/artist/ArtistLayoutComponent.tsx","actions/trackAction.ts","containers/track/TrackLayoutComponent.tsx","containers/AllSearchComponent.tsx","containers/TopLayout.tsx","components/ParamsDescriptionComponent.tsx","components/HomeIcon.tsx","containers/details/DetailBasic.tsx","containers/details/DetailParamerters.tsx","components/LoadingSpinner.tsx","containers/details/DetailContainer.tsx","containers/artist-track/ArtistTrackLayout.tsx","containers/album-track/AlbumTrackLayout.tsx","App.tsx","reportWebVitals.ts","apis/tracksApi.ts","sagas/trackSaga.ts","apis/artistApi.ts","sagas/artistSaga.ts","apis/albumApi.ts","sagas/albumSaga.ts","sagas/index.ts","reducers/trackReducer.ts","reducers/albumReducer.ts","reducers/artistReducer.ts","reducers/index.ts","index.tsx","configureStore.ts"],"names":["images","useStyles","makeStyles","theme","createStyles","root","flexWrap","minWidth","width","marginTop","image","position","height","breakpoints","down","zIndex","opacity","border","focusVisible","imageButton","left","right","top","bottom","display","alignItems","justifyContent","color","palette","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","padding","spacing","imageMarked","accessUrl","process","join","LoginLayout","classes","className","ButtonBase","focusRipple","href","focusVisibleClassName","style","backgroundImage","Typography","component","variant","TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","a11yProps","flexGrow","LinkComponent","src","to","textDecoration","GET_TRACKS_START","GET_TRACKS_SUCCESS","GET_TRACKS_FAILURE","GET_ARTISTS_START","GET_ARTISTS_SUCCESS","GET_ARTISTS_FAILURE","GET_ALBUMS_START","GET_ALBUMS_SUCCESS","GET_ALBUMS_FAILURE","GET_TRACK_DETAILS_START","GET_TRACK_DETAILS_SUCCESS","GET_TRACK_DETAILS_FAILURE","GET_TRACK_PARAMETERS_START","GET_TRACK_PARAMETERS_SUCCESS","GET_TRACK_PARAMETERS_FAILURE","GET_ARTIST_TOP_TRACK_START","GET_ARTIST_TOP_TRACK_SUCCESS","GET_ARTIST_TOP_TRACK_FAILURE","GET_ALBUM_TRACKS_START","GET_ALBUM_TRACKS_SUCCESS","GET_ALBUM_TRACKS_FAILURE","getAlbumAction","payload","type","AcitonType","getAlbumTracksAction","connect","state","album","albums","dispatch","bindActionCreators","getAlbumTracks","token","handleOnAlbumTracks","a","albumId","url","name","length","map","alt","undefined","onClick","artist","getArtistAction","getArtistTopTracksAction","getArtistTopTracks","handleOnTopTracks","artistId","marginBottom","getTracksAction","ActionType","getTrackDetailsAction","getTrackParametersAction","track","tracks","isLoading","getTrackDetails","getTrackParameters","handleOnTrackDetails","searchId","trackId","handleOnTrackParameters","getDetailInformations","tk","searchTracks","searchAlbums","searchArtists","useState","searchWord","setSearchWord","useEffect","searchAllData","handleOnSearch","searchInput","handleOnReset","placeholder","onChange","e","target","Div","div","TopLayout","setValue","Styles","AppBar","Tabs","event","newValue","aria-label","Tab","label","table","createData","description","rows","ParamsDescriptionComponent","React","open","setOpen","handleClose","Button","size","Dialog","onClose","aria-describedby","DialogTitle","DialogContent","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","scope","DialogActions","autoFocus","HomeIcon","SvgIcon","d","details","flexDirection","textAlign","content","cover","controls","paddingLeft","paddingBottom","playIcon","Card","startIcon","marginRight","CardMedia","title","CardContent","artists","WebkitJustifyContent","StyledTableCell","withStyles","head","body","fontSize","StyledTableRow","action","hover","trackParams","chartData","subject","params","acousticness","danceability","energy","instrumentalness","liveness","valence","data","dataKey","tick","fill","stroke","fillOpacity","marginLeft","margin","CircularIndeterminate","CircularProgress","maxWidth","artistTopTracks","topTracks","ListItem","ListItemAvatar","Avatar","ListItemText","primary","Divider","albumTracks","SnackbarContent","message","App","setToken","hash","window","location","substring","slice","StylesProvider","injectFirst","exact","path","withProps","DetailContainer","ArtistTrackLayout","AlbumTrackLayout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getTracks","serachKey","axios","get","headers","Authorization","response","res","items","item","playUrl","preview_url","Promise","resolve","catch","error","reject","Error","getDetailKey","getTracksSaga","getTrackDetailsSaga","getTrackParamertersSaga","watchTracks","rootSaga","accsessKey","handler","API","call","put","takeEvery","ActionTypes","all","fork","getArtist","searchKey","requestKey","getArtistSaga","getArtistTopTracksSaga","watchArtists","getAlbum","tarckNumber","track_number","getAlbumSaga","getAlbumTracksSaga","watchAlbums","trackSaga","artistSaga","albumSaga","initialState","trackReducer","albumReducer","artistReducer","rootReducer","history","combineReducers","router","connectRouter","store","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","configureStore","createBrowserHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08d8d3da.chunk.js","sourcesContent":["import React from \"react\";\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst authEndpoint = process.env.REACT_APP_AUTH_ENDPOINT_URL;\nconst redirectUri = process.env.REACT_APP_REDIRECT_URL;\nconst clientId = process.env.REACT_APP_CLIENT_ID;\n\n// 対応範囲\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\nconst images = {\n  url: \"/static/images/grid-list/breakfast.jpg\",\n  title: \"Use App\",\n  width: \"50%\"\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexWrap: \"wrap\",\n      minWidth: 500,\n      width: \"100%\",\n      marginTop: \"20%\",\n    },\n    image: {\n      position: \"relative\",\n      height: 200,\n      [theme.breakpoints.down(\"xs\")]: {\n        width: \"100% !important\", // Overrides inline-style\n        height: 100\n      },\n      \"&:hover, &$focusVisible\": {\n        zIndex: 1,\n        \"& $imageBackdrop\": {\n          opacity: 0.15\n        },\n        \"& $imageMarked\": {\n          opacity: 0\n        },\n        \"& $imageTitle\": {\n          border: \"4px solid currentColor\"\n        }\n      }\n    },\n    focusVisible: {},\n    imageButton: {\n      position: \"absolute\",\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      color: theme.palette.common.white\n    },\n    imageSrc: {\n      position: \"absolute\",\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center 40%\"\n    },\n    imageBackdrop: {\n      position: \"absolute\",\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      backgroundColor: theme.palette.common.black,\n      opacity: 0.4,\n      transition: theme.transitions.create(\"opacity\")\n    },\n    imageTitle: {\n      position: \"relative\",\n      padding: `${theme.spacing(4)}px ${theme.spacing(8)}px ${\n        theme.spacing(2) + 6\n      }px`\n    },\n    imageMarked: {\n      height: 3,\n      width: 18,\n      backgroundColor: theme.palette.common.white,\n      position: \"absolute\",\n      bottom: -2,\n      left: \"calc(50% - 9px)\",\n      transition: theme.transitions.create(\"opacity\")\n    }\n  })\n);\n\nexport const getTokenFromUrl = () => {\n  return window.location.hash\n  .substring(1)\n  .slice(13)\n};\n\nexport const accessUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n\nconst LoginLayout: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <ButtonBase\n        focusRipple\n        href={accessUrl}\n        key={images.title}\n        className={classes.image}\n        focusVisibleClassName={classes.focusVisible}\n        style={{\n          width: images.width\n        }}\n      >\n        <span\n          className={classes.imageSrc}\n          style={{\n            backgroundImage: `url(${images.url})`\n          }}\n        />\n        <span className={classes.imageBackdrop} />\n        <span className={classes.imageButton}>\n          <Typography\n            component=\"span\"\n            variant=\"subtitle1\"\n            color=\"inherit\"\n            className={classes.imageTitle}\n          >\n            {images.title}\n            <span className={classes.imageMarked} />\n          </Typography>\n        </span>\n      </ButtonBase>\n    </div>\n  )\n};\n\nexport default LoginLayout;","import { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport React from 'react';\n\nexport interface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nexport function TabPanel(props: TabPanelProps) {\n  const {children, value, index, ...other} = props;\n  return (\n    <div\n      style={{backgroundColor: 'black'}}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nexport function a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: 'black',\n  },\n}));","import React, { FC, ReactElement } from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface DefaultProps {\n  src: string;\n  children?: string | ReactElement<any>;\n}\n\nconst LinkComponent: FC<DefaultProps> = ({\n  src,\n  children\n}) => {\n  return (\n    <Link to={src} style={{ textDecoration: 'none' }}>{children}</Link>\n  )\n};\n\nexport default LinkComponent;","// 曲検索\nexport const GET_TRACKS_START = \"GET_TRACKS_START\";\nexport const GET_TRACKS_SUCCESS = \"GET_TRACKS_SUCCESS\";\nexport const GET_TRACKS_FAILURE = \"GET_TRACKS_FAILURE\";\n\n// アーティスト検索\nexport const GET_ARTISTS_START = \"GET_ARTISTS_START\";\nexport const GET_ARTISTS_SUCCESS = \"GET_ARTISTS_SUCCESS\";\nexport const GET_ARTISTS_FAILURE = \"GET_ARTISTS_FAILURE\";\n\n// アルバム検索\nexport const GET_ALBUMS_START = \"GET_ALBUMS_START\";\nexport const GET_ALBUMS_SUCCESS = \"GET_ALBUMS_SUCCESS\";\nexport const GET_ALBUMS_FAILURE = \"GET_ALBUMS_FAILURE\";\n\n// 1曲の基本情報取得 => tracksApi.tsで対応する\nexport const GET_TRACK_DETAILS_START = \"GET_TRACK_DETAILS_START\";\nexport const GET_TRACK_DETAILS_SUCCESS = \"GET_TRACK_DETAILS_SUCCESS\";\nexport const GET_TRACK_DETAILS_FAILURE = \"GET_TRACK_DETAILS_FAILURE\";\n\n// 1曲のレーダーチャート用のパラメータ取得 => tracksApi.tsで対応する\nexport const GET_TRACK_PARAMETERS_START = \"GET_TRACK_PARAMETERS_START\";\nexport const GET_TRACK_PARAMETERS_SUCCESS = \"GET_TRACK_PARAMETERS_SUCCESS\";\nexport const GET_TRACK_PARAMETERS_FAILURE = \"GET_TRACK_PARAMETERS_FAILURE\";\n\n// アーティストのTOP曲検索\nexport const GET_ARTIST_TOP_TRACK_START = \"GET_ARTIST_TOP_TRACK_START\";\nexport const GET_ARTIST_TOP_TRACK_SUCCESS = \"GET_ARTIST_TOP_TRACK_SUCCESS\";\nexport const GET_ARTIST_TOP_TRACK_FAILURE = \"GET_ARTIST_TOP_TRACK_FAILURE\";\n\n\n// アルバム収録曲検索\nexport const GET_ALBUM_TRACKS_START = \"GET_ALBUM_TRACKS_START\";\nexport const GET_ALBUM_TRACKS_SUCCESS = \"GET_ALBUM_TRACKS_SUCCESS\";\nexport const GET_ALBUM_TRACKS_FAILURE = \"GET_ALBUM_TRACKS_FAILURE\";","import * as AcitonType from \"../constants/spotifyRequestType\";\nimport * as Models from \"../models/AlbumModel\";\nimport { searchKey, albumTracksRequestKey } from \"../models/UtilModels\";\n\n// アルバム検索\nexport const getAlbumAction = {\n  start: (payload: searchKey) => ({\n    type: AcitonType.GET_ALBUMS_START as typeof AcitonType.GET_ALBUMS_START,\n    payload: payload\n  }),\n  success: (payload: Models.albumType[]) => ({\n    type: AcitonType.GET_ALBUMS_SUCCESS as typeof AcitonType.GET_ALBUMS_SUCCESS,\n    payload: payload\n  }),\n  failure: () => ({\n    type: AcitonType.GET_ALBUMS_FAILURE as typeof AcitonType.GET_ALBUMS_FAILURE\n  })\n};\n\n// アルバム収録曲取得\nexport const getAlbumTracksAction = {\n  start: (payload: albumTracksRequestKey) => ({\n    type: AcitonType.GET_ALBUM_TRACKS_START as typeof AcitonType.GET_ALBUM_TRACKS_START,\n    payload: payload\n  }),\n  success: (payload: Models.albumTracks) => ({\n    type: AcitonType.GET_ALBUM_TRACKS_SUCCESS as typeof AcitonType.GET_ALBUM_TRACKS_SUCCESS,\n    payload: payload\n  }),\n  failure: () => ({\n    type: AcitonType.GET_ALBUM_TRACKS_FAILURE as typeof AcitonType.GET_ALBUM_TRACKS_FAILURE\n  })\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch, bindActionCreators } from \"redux\";\n\nimport * as Models from \"../../models/AlbumModel\";\nimport { albumTracksRequestKey } from \"../../models/UtilModels\";\nimport { AppState } from \"../../models\";\nimport LinkComponent from \"../LinkComponent\";\nimport {\n  getAlbumTracksAction\n} from \"../../actions/albumAction\";\nimport \"./album.css\";\n\ninterface Props {\n  token: string;\n  album: Models.albumType[]; \n  getAlbumTracks: (payload: albumTracksRequestKey) => void;\n}\n\nconst AlbumLayoutComponent: React.FC<Props> = ({\n  token,\n  album,\n  getAlbumTracks\n}) => {\n  const handleOnAlbumTracks = async (album:  Models.albumType) => {\n    const payload: albumTracksRequestKey = {\n      albumId: album.id,\n      token: token,\n      image: {\n        height: 300,\n        width: 300,\n        url: album.image.url,\n        name: album.name\n      }\n    };\n    await getAlbumTracks(payload);\n  }\n\n  return (\n    <>\n      {\n        album.length > 0 ? album.map(album =>\n          <div key={album.id} className=\"album\">\n            <LinkComponent src={`/album/${album.id}`}>\n              <img \n                alt={album.name}\n                src={album.image === undefined ? undefined : album.image.url}\n                onClick={() => handleOnAlbumTracks(album)}\n              />\n            </LinkComponent>\n            <h3>{album.name}</h3>\n            <p>By {album.artist}</p>\n          </div>\n        )\n        : \n        <>\n          <div className=\"artist\">\n            <h1>No Result</h1>\n            <img\n              alt=\"NoResultImage\"\n              src=\"https://i.scdn.co/image/ab67616d00001e0268b12ccdf28b19a63645d245\"\n            />\n          </div>\n        </>\n      }\n  </>\n  )\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  album: state.album.albums\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => \n  bindActionCreators({\n    getAlbumTracks: payload => getAlbumTracksAction.start(payload)\n  }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AlbumLayoutComponent);\n","import * as AcitonType from \"../constants/spotifyRequestType\";\nimport * as Models from \"../models/ArtistModel\";\nimport { trackType } from \"../models/TrackModel\";\nimport { searchKey } from \"../models/UtilModels\";\n\n// アーティスト検索\nexport const getArtistAction = {\n  start: (payload: searchKey) => ({\n    type: AcitonType.GET_ARTISTS_START as typeof AcitonType.GET_ARTISTS_START,\n    payload: payload\n  }),\n  success: (payload: Models.artistType[]) => ({\n    type: AcitonType.GET_ARTISTS_SUCCESS as typeof AcitonType.GET_ARTISTS_SUCCESS,\n    payload: payload\n  }),\n  failure: () => ({\n    type: AcitonType.GET_ARTISTS_FAILURE as typeof AcitonType.GET_ARTISTS_FAILURE\n  })\n};\n\n// アーティストのTOP取得\nexport const getArtistTopTracksAction = {\n  start: (payload: Models.requestKey) => ({\n    type: AcitonType.GET_ARTIST_TOP_TRACK_START as typeof AcitonType.GET_ARTIST_TOP_TRACK_START,\n    payload: payload\n  }),\n  success: (payload: trackType[]) => ({\n    type: AcitonType.GET_ARTIST_TOP_TRACK_SUCCESS as typeof AcitonType.GET_ARTIST_TOP_TRACK_SUCCESS,\n    payload: payload\n  }),\n  failure: () => ({\n    type: AcitonType.GET_ARTIST_TOP_TRACK_FAILURE as typeof AcitonType.GET_ARTIST_TOP_TRACK_FAILURE\n  })\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch, bindActionCreators } from \"redux\";\n\nimport * as Models from \"../../models/ArtistModel\";\nimport { AppState } from \"../../models\";\nimport LinkComponent from \"../LinkComponent\";\nimport {\n  getArtistTopTracksAction\n} from \"../../actions/artistAction\";\nimport \"./artist.css\";\n\ninterface Props {\n  token: string;\n  artist: Models.artistType[];\n  getArtistTopTracks: (payload: Models.requestKey) => void;\n}\n\n//  TOPトラックを取得できるのは10曲だけ => 今はとりあえずそれでOK\n//  この部分はAPI通信なのでリクエストのエンドポイントを変更するだけで取得できるデータを変更できる\n\nconst ArtistLayoutComponent: React.FC<Props> = ({\n  token,\n  artist,\n  getArtistTopTracks\n}) => {\n\n  const handleOnTopTracks = async (artist: Models.artistType) => {\n    const payload: Models.requestKey = {\n      artistId: artist.id,\n      token: token,\n      name: artist.name,\n      image: artist.image.url\n    };\n    await getArtistTopTracks(payload);\n  }\n\n  return (\n    <>\n      { artist.length > 0 ? artist.map(artist => \n        <div key={artist.id} className=\"artist\">\n          <LinkComponent src={`/artist/${artist.id}`}>\n            <img\n              alt={artist.name}\n              src={artist.image === undefined ? undefined : artist.image.url}\n              onClick={() => handleOnTopTracks(artist)}\n            />\n          </LinkComponent>\n          <h3 style={{ marginBottom : '20px'}}>{ artist.name }</h3>\n        </div>\n      )\n      : \n      <>\n        <div className=\"artist\">\n          <h1>No Result</h1>\n          <img\n            alt=\"NoResultImage\"\n            src=\"https://i.scdn.co/image/ab67616d00001e0268b12ccdf28b19a63645d245\"\n          />\n        </div>\n      </>\n      }\n    </>\n  )\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  artist: state.artist.artist\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => \n  bindActionCreators({\n    getArtistTopTracks: payload => getArtistTopTracksAction.start(payload)\n  }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ArtistLayoutComponent);","import * as ActionType from \"../constants/spotifyRequestType\";\nimport * as Models from \"../models/TrackModel\";\nimport { searchKey, getDetailKey } from \"../models/UtilModels\";\n\n//  曲検索\nexport const getTracksAction = {\n  start: (payload: searchKey) => ({\n    type: ActionType.GET_TRACKS_START as typeof ActionType.GET_TRACKS_START,\n    payload: payload\n  }),\n  success: (payload: Models.trackType[]) => ({\n    type: ActionType.GET_TRACKS_SUCCESS as typeof ActionType.GET_TRACKS_SUCCESS,\n    payload: payload\n  }),\n  faluer: () => ({\n    type: ActionType.GET_TRACKS_FAILURE as typeof ActionType.GET_TRACKS_FAILURE\n  })\n};\n\n//  曲詳細表示-基本情報取得\nexport const getTrackDetailsAction = {\n  start: (payload: getDetailKey) => ({\n    type: ActionType.GET_TRACK_DETAILS_START as typeof ActionType.GET_TRACK_DETAILS_START,\n    payload: payload\n  }),\n  success: (payload: Models.trackBasicDetail) => ({\n    type: ActionType.GET_TRACK_DETAILS_SUCCESS as typeof ActionType.GET_TRACK_DETAILS_SUCCESS,\n    payload: payload\n  }),\n  faluer: () => ({\n    type: ActionType.GET_TRACK_DETAILS_FAILURE as typeof ActionType.GET_TRACK_DETAILS_FAILURE\n  })\n};\n\n//  曲詳細表示-パラメータ取得\nexport const getTrackParametersAction = {\n  start: (payload: getDetailKey) => ({\n    type: ActionType.GET_TRACK_PARAMETERS_START as typeof ActionType.GET_TRACK_PARAMETERS_START,\n    payload: payload\n  }),\n  success: (payload: Models.trackParams) => ({\n    type: ActionType.GET_TRACK_PARAMETERS_SUCCESS as typeof ActionType.GET_TRACK_PARAMETERS_SUCCESS,\n    payload: payload\n  }),\n  faluer: () => ({\n    type: ActionType.GET_TRACK_PARAMETERS_FAILURE as typeof ActionType.GET_TRACK_PARAMETERS_FAILURE\n  })\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch, bindActionCreators } from \"redux\";\n\nimport * as Models from \"../../models/TrackModel\";\nimport { getDetailKey } from \"../../models/UtilModels\";\nimport { \n  getTrackDetailsAction,\n  getTrackParametersAction\n} from \"../../actions/trackAction\";\nimport { AppState } from \"../../models\";\nimport LinkComponent from \"../LinkComponent\";\nimport \"./track.css\";\n\n\ninterface Props {\n  token: string;\n  track: Models.trackType[];\n  isLoading: boolean;\n  getTrackDetails: (payload: getDetailKey) => void;\n  getTrackParameters: (payload: getDetailKey) => void;\n}\n\nconst TrackLayoutComponent: React.FC<Props> = ({\n  token,\n  track,\n  getTrackDetails,\n  getTrackParameters,\n  isLoading\n}) => {\n\n  const handleOnTrackDetails = async (searchId: string) => {\n    const payload: getDetailKey = {\n      trackId: searchId,\n      token: token\n    };\n    await getTrackDetails(payload);\n  }\n\n  const handleOnTrackParameters = async (searchId: string) => {\n    const payload: getDetailKey = {\n      trackId: searchId,\n      token: token\n    };\n    await getTrackParameters(payload);\n  }\n\n  const getDetailInformations = async (searchId: string) => {\n    handleOnTrackDetails(searchId);\n    handleOnTrackParameters(searchId);\n  }\n\n  return (\n    <>\n      { isLoading === false ?\n              ( track.length > 0 ? track.map(tk => \n                <div key={tk.id} className=\"track\">\n                  <LinkComponent src={`/show/${tk.id}`}>\n                  <img alt={tk.name}\n                    src={tk.image === undefined ? undefined : tk.image.url}\n                    onClick={() => getDetailInformations(tk.id)}\n                  />\n                  </LinkComponent>\n                  <h3 style={{ marginBottom : '20px'}}>{ tk.name }</h3>\n                </div>\n              )\n              : \n                <>\n                  <div className=\"track\">\n                    <h1>No Result</h1>\n                    <img\n                      alt=\"NoResultImage\"\n                      src=\"https://i.scdn.co/image/ab67616d00001e0268b12ccdf28b19a63645d245\"\n                    />\n                  </div>\n                </>\n              )\n        : \n        <>\n          <h1>Now Loading....</h1>\n        </>\n      }\n    </>\n  )\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  track: state.track.tracks,\n  isLoading: state.track.isLoading\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => \n  bindActionCreators({\n    getTrackDetails: payload => getTrackDetailsAction.start(payload),\n    getTrackParameters: payload => getTrackParametersAction.start(payload),\n  }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TrackLayoutComponent);","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { searchKey } from \"../models/UtilModels\";\nimport { getAlbumAction } from \"../actions/albumAction\";\nimport { getArtistAction } from \"../actions/artistAction\";\nimport { getTracksAction } from \"../actions/trackAction\";\n\ninterface Props {\n  token: string;\n}\n\ninterface DispathcProps {\n  searchTracks: (payload: searchKey) => void;\n  searchAlbums: (payload: searchKey) => void;\n  searchArtists: (payload: searchKey) => void;\n}\n\ntype DefaultProps = Props & DispathcProps;\n\nconst SearchLayout: React.FC<DefaultProps> = ({\n  token,\n  searchTracks,\n  searchAlbums,\n  searchArtists\n}) => {\n  const [searchWord, setSearchWord] = useState<string>(\"\");\n\n  // TODO: 警告が出ているので修正する\n  useEffect(() => {\n    searchAllData();\n  }, [searchWord])\n\n  const handleOnSearch = async () => {\n    const payload: searchKey = {\n      searchInput: searchWord,\n      token: token\n    };\n    if (payload.searchInput !== \"\") {\n      await searchTracks(payload);\n      await searchAlbums(payload);\n      await searchArtists(payload);\n    }\n  };\n\n  const searchAllData = async () => {\n    if (searchWord !== \"\") {\n      handleOnSearch();\n    } else {\n      handleOnReset();\n    }\n  }\n\n  const handleOnReset = async () => {\n    const payload: searchKey = {\n      searchInput: \" \",\n      token: token\n    };\n    setSearchWord(\"\");\n    await searchTracks(payload);\n    await searchAlbums(payload);\n    await searchArtists(payload);\n  };\n\n  return (\n    <>\n      <input\n        placeholder=\"Type your search\"\n        value={searchWord}\n        onChange={(e) => setSearchWord(e.target.value)}\n      />\n    </>\n  )\n};\n\nconst mapStateToProps = () => ({\n  //\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => \n bindActionCreators({\n  searchTracks: payload => getTracksAction.start(payload),\n  searchAlbums: payload => getAlbumAction.start(payload),\n  searchArtists: payload => getArtistAction.start(payload)\n }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchLayout);\n","import React, { useState } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport style from \"styled-components\"\n\nimport * as Styles from \"./styles\";\nimport AlbumLayoutComponent from \"./album/AlbumLayoutComponent\";\nimport ArtistLayoutComponent from \"./artist/ArtistLayoutComponent\";\nimport TrackLayoutComponent from \"./track/TrackLayoutComponent\";\nimport SearchLayout from \"./AllSearchComponent\";\nimport \"./top.css\";\n\nconst Div = style.div`\n  background-color: black;\n`;\n\ninterface Props {\n  token: string;\n}\n\nconst TopLayout: React.FC<Props> = ({\n  token\n}) => {\n  const [value, setValue] = useState<number>(0);\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n  \n  return (\n    <>\n      <Div>\n        <div className=\"searchBar-wrapper\">\n          <div className={Styles.useStyles().root}>\n            <AppBar position=\"static\" style={{alignItems: \"center\", backgroundColor: \"black\"}}>\n              <Tabs value={value} \n                onChange={handleChange} \n                aria-label=\"simple tabs example\" \n                style={{backgroundColor: 'black'}}\n              >\n                <Tab label=\"Tracks\" {...Styles.a11yProps(0)} />\n                <Tab label=\"Artist\" {...Styles.a11yProps(1)} />\n                <Tab label=\"Album\" {...Styles.a11yProps(2)} />\n              </Tabs>\n            </AppBar>\n            <SearchLayout token={token} />\n            <Styles.TabPanel  value={value} index={0}>\n              <TrackLayoutComponent token={token} />\n            </Styles.TabPanel>\n            <Styles.TabPanel value={value} index={1}>\n              <ArtistLayoutComponent token={token} />\n            </Styles.TabPanel>\n            <Styles.TabPanel value={value} index={2}>\n              <AlbumLayoutComponent token={token} />\n            </Styles.TabPanel>\n          </div>\n        </div>\n      </Div>\n    </>\n  )\n};\n\nexport default TopLayout;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  table: {\n    width: \"100%\"\n  }\n});\n\nfunction createData(\n  name: string,\n  description: string\n) {\n  return { name, description　};\n}\n\nconst rows = [\n  createData(\n    \"acousticness\",\n    \"その曲がどれくらいアコースティックなのかを、0.0から1.0までの数字で表します。どれくらいシンセとかエレキ楽器を使わずに演ってるかってこと。多分だけど、「曲の中にアコースティックな部分（時間）がどれだけあるか」とニアイコール。\"\n  ),\n  createData(\n    \"danceability\",\n    \"その曲がどれだけ踊れるか楽曲なのかを、0.0から1.0までの数字で表します。要するにダンスミュージックっぽさ。テンポやリズムに基づいてるみたいだけどまぁ深く考えなくていいんじゃないかな。踊れば。\"\n  ),\n  createData(\n    \"energy\",\n    \"曲のエネルギー量を0.0から1.0の以下略。速くて騒々しい曲はエネルギーが高くなり、逆に静かでゆっくりな曲は低いようです。0.5はまさに冷静と情熱の間。ちがうか。\"\n  ),\n  createData(\n    \"instrumentalness\",\n    \"どれくらい歌(AhとかOhは歌に含まない)が無いかを0.0から1.0で。ラップのようなThe歌詞みたいな部分が多いほど、この値は低くなります。公式によると、0.5を超えてればだいたいインストなんじゃねーかと。\"\n  ),\n  createData(\n    \"liveness\",\n    \"ライブっぽさ。0.0から1.0。基準は「観客がいるかどうか（歓声とかかな）」で、0.8を超えたらまぁライブ音源でしょと。2階席聞こえるー？\"\n  ),\n  createData(\n    \"valence\",\n    \"曲のポジティブさ(0.0〜1.0)。これに関してはよくわからない。\"\n  )\n];\n\nconst ParamsDescriptionComponent = () => {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={handleClickOpen}>\n        Description\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        className={classes.table}\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Spotifyが出しているパラメータの説明\"}\n        </DialogTitle>\n        <DialogContent>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Params Name</TableCell>\n                  <TableCell align=\"left\">説明</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row) => (\n                  <TableRow key={row.name}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.name}\n                    </TableCell>\n                    <TableCell align=\"left\">{row.description}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ParamsDescriptionComponent;","import React from 'react';\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\n\nconst HomeIcon = (props: SvgIconProps) => {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n    </SvgIcon>\n  );\n}\n\nexport default HomeIcon;","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nimport { AppState } from \"../../models\";\nimport * as Models from \"../../models/TrackModel\";\nimport ParamsDescriptionComponent from \"../../components/ParamsDescriptionComponent\";\nimport LinkComponent from \"../LinkComponent\";\nimport HomeIcon from \"../../components/HomeIcon\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      backgroundColor: 'black',\n      marginTop: 50\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n      textAlign: 'center'\n    },\n    content: {\n      color: 'white',\n      marginBottom: \"40px\"\n    },\n    cover: {\n      width: 300,\n      height: 300,\n    },\n    controls: {\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n      height: 38,\n      width: 38,\n    },\n  }),\n);\n\ninterface StateProps {\n  track: Models.trackBasicDetail;\n};\n\nconst DetaiBasic: React.FC<StateProps> = ({\n  track\n}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <LinkComponent src={\"/\"}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<HomeIcon />}\n            style={{ marginRight: '30px' }}\n          >Home</Button>\n        </LinkComponent>\n        <CardMedia\n          className={classes.cover}\n          image={track.image.url}\n          title={track.name}\n        />\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <h1>{track.name}</h1>\n            { track.artists.map((artist) => {\n              return <h2 key={artist}>{ artist }</h2>\n            })}\n          </CardContent>\n          {/* TODO:クリックでサンプルを再生できるようにする */}\n          {/* <div className={classes.controls}>\n            <IconButton aria-label=\"play/pause\">\n              <PlayArrowIcon className={classes.playIcon} />\n            </IconButton>\n          </div> */}\n          <ParamsDescriptionComponent />\n        </div>\n      </Card>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  track: state.track.track\n});\n\nexport default connect(\n  mapStateToProps\n)(DetaiBasic);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Radar, RadarChart, PolarGrid, PolarAngleAxis,\n} from 'recharts';\n\nimport { Theme, createStyles, makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { AppState } from \"../../models\";\nimport * as Models from \"../../models/TrackModel\";\n\ninterface StateProps {\n  track: Models.trackParams;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: 'black',\n      marginTop: 50\n    },\n    details: {\n      display: 'flex',\n      justifyContent: 'center',\n      textAlign: 'center'\n    },\n    content: {\n      color: 'white',\n    },\n    cover: {\n      width: 300,\n      height: 300,\n    },\n    controls: {\n      display: 'flex',\n      justifyContent: 'space-around',\n      WebkitJustifyContent: 'space-around'\n    },\n    playIcon: {\n      height: 38,\n      width: 38,\n    }\n  }),\n);\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }),\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }),\n)(TableRow);\n\nconst DetaiParamslLayout: React.FC<StateProps> = ({\n  track\n}) => {\n  const classes = useStyles();\n\n  const chartData = [\n    {\n      subject: 'Acousticness',\n      params: track.acousticness * 100\n    },\n    {\n      subject: 'Danceability',\n      params: track.danceability * 100\n    },\n    {\n      subject: 'Energy',\n      params: track.energy * 100\n    },\n    {\n      subject: 'Instrumentalness',\n      params: track.instrumentalness * 100\n    },\n    {\n      subject: 'Liveness',\n      params: track.liveness * 100\n    },\n    {\n      subject: 'Valence',\n      params: track.valence * 100\n    },\n  ];\n\n  function createData(name: string, params: number) {\n    return { name, params};\n  }\n\n  const rows = [\n    createData('Acousticness', chartData[0].params),\n    createData('Danceability', chartData[1].params),\n    createData('Energy', chartData[2].params),\n    createData('Instrumentalness', chartData[3].params),\n    createData('Liveness', chartData[4].params),\n    createData('Valence', chartData[5].params),\n  ];\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <div className={classes.controls}>\n              <RadarChart width={450} height={300} data={chartData} >\n                <PolarGrid />\n                <PolarAngleAxis dataKey=\"subject\" tick={{ fill: 'white' }}/>\n                <Radar name=\"Mike\" dataKey=\"params\" stroke=\"#84d895\" fill=\"#84d895\" fillOpacity={0.8} />\n              </RadarChart>\n              <TableContainer component={Paper}>\n                <Table aria-label=\"customized table\">\n                  <TableBody>\n                    {rows.map((row) => (\n                      <StyledTableRow key={row.name}>\n                        <StyledTableCell component=\"th\" scope=\"row\">{row.name}</StyledTableCell>\n                        <StyledTableCell align=\"center\">{row.params}</StyledTableCell>\n                      </StyledTableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </div>\n          </CardContent>\n        </div>\n      </Card>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  track: state.track.trackParams\n});\n\nexport default connect(\n  mapStateToProps\n)(DetaiParamslLayout);","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      marginLeft: \"40%\",\n      marginTop: \"20%\",\n      '& > * + *': {\n        margin: \"auto\",\n      },\n    },\n  }),\n);\n\nexport default function CircularIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress size={250}/>\n    </div>\n  );\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport DetaiBasic from \"./DetailBasic\";\nimport DetaiParamslLayout from \"./DetailParamerters\";\nimport CircularIndeterminate from \"../../components/LoadingSpinner\";\nimport { AppState } from \"../../models\";\n\ninterface Token {\n  isLoading: boolean;\n}\n\nconst DetailContainer: React.FC<Token> = ({\n  isLoading\n}) => {\n  return (\n    <>\n      { isLoading === false ?\n        <>\n          <DetaiBasic />\n          <DetaiParamslLayout />\n        </>\n        : \n        <CircularIndeterminate />\n      }\n    </>\n  )\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoading: state.track.isLoading\n});\n\nexport default connect(\n  mapStateToProps\n)(DetailContainer);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch, bindActionCreators } from \"redux\";\n\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DetailsIcon from '@material-ui/icons/Details';\n\nimport { getDetailKey } from \"../../models/UtilModels\";\nimport { artistTopTracks } from \"../../models/ArtistModel\";\nimport { AppState } from \"../../models\";\nimport LinkComponent from \"../LinkComponent\";\nimport { \n  getTrackDetailsAction,\n  getTrackParametersAction\n} from \"../../actions/trackAction\";\nimport HomeIcon from \"../../components/HomeIcon\";\nimport CircularIndeterminate from \"../../components/LoadingSpinner\";\n\n// TODO: Headeing属性にcontentを持たせろという警告が出ているので修正する\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      backgroundColor: 'black',\n      marginTop: 50\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n      textAlign: 'center'\n    },\n    content: {\n      color: 'white',\n    },\n    cover: {\n      width: 300,\n      height: 300,\n    },\n    tracks: {\n      maxWidth: '50%',\n      marginTop: theme.spacing(1),\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    }\n  }),\n);\n\n\ninterface Props {\n  token: string;\n  artistTopTracks: artistTopTracks;\n  isLoading: boolean;\n  getTrackDetails: (payload: getDetailKey) => void;\n  getTrackParameters: (payload: getDetailKey) => void;\n}\n\nconst ArtistTrackLayout: React.FC<Props> = ({\n  token,\n  artistTopTracks,\n  isLoading,\n  getTrackDetails,\n  getTrackParameters\n}) => {\n\n  const classes = useStyles();\n\n  const handleOnTrackDetails = async (searchId: string) => {\n    const payload: getDetailKey = {\n      trackId: searchId,\n      token: token\n    };\n    await getTrackDetails(payload);\n  }\n\n  const handleOnTrackParameters = async (searchId: string) => {\n    const payload: getDetailKey = {\n      trackId: searchId,\n      token: token\n    };\n    await getTrackParameters(payload);\n  }\n\n  const getDetailInformations = async (searchId: string) => {\n    handleOnTrackDetails(searchId);\n    handleOnTrackParameters(searchId);\n  }\n\n  return (\n    <>\n      { isLoading === false ?\n          <div>\n            <Card className={classes.root}>\n              <LinkComponent src={\"/\"}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<HomeIcon />}\n                  style={{ marginRight: '30px' }}\n                >\n                  Home\n                </Button>\n              </LinkComponent>\n              <CardMedia\n                className={classes.cover}\n                image={artistTopTracks.artist.image}\n                title={artistTopTracks.artist.name}\n              />\n              <div className={classes.details}>\n                <CardContent className={classes.content}>\n                  <h1>{artistTopTracks.artist.name}</h1>\n                </CardContent>\n              </div>\n            </Card>\n          </div>\n          :\n          <CircularIndeterminate />\n      }\n\n      { isLoading === false ?\n        ( artistTopTracks.tracks.length > 0 ? artistTopTracks.tracks.map(tk =>\n          <div key={tk.id} className={classes.tracks}>\n            <ListItem alignItems=\"flex-start\">\n              <ListItemAvatar>\n                <Avatar alt={tk.name} src={tk.image.url} />\n              </ListItemAvatar>\n\n              {/* 表示はできたのでレイアウトを変更する */ }\n              <ListItemText primary={tk.name} />\n              { tk.artists.map((name) => {\n                return <p key={name}>{name+\"/\"}</p>\n              })}\n              <LinkComponent src={`/show/${tk.id}`}>\n                <Button color=\"primary\" size=\"small\" variant=\"contained\"\n                  onClick={() => getDetailInformations(tk.id)}><DetailsIcon /></Button>           \n              </LinkComponent>\n            </ListItem>\n            <Divider variant=\"inset\" />\n          </div>\n          )\n        : \n          <>\n            <div className=\"artist\">\n              <h1>No Result</h1>\n              <img\n                alt=\"NoResultImage\"\n                src=\"https://i.scdn.co/image/ab67616d00001e0268b12ccdf28b19a63645d245\"\n              />\n            </div>\n          </>\n        )\n        : \n        <>\n          <h1></h1>\n        </>\n      }\n    </>\n  )\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  artistTopTracks: state.artist.topTracks,\n  isLoading: state.artist.isLoading\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => \n  bindActionCreators({\n    getTrackDetails: payload => getTrackDetailsAction.start(payload),\n    getTrackParameters: payload => getTrackParametersAction.start(payload),\n  }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ArtistTrackLayout);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch, bindActionCreators } from \"redux\";\n\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Button from '@material-ui/core/Button';\nimport DetailsIcon from '@material-ui/icons/Details';\n\nimport * as Models from \"../../models/AlbumModel\";\nimport { getDetailKey, ArtistTopTracksRequestKey } from \"../../models/UtilModels\";\nimport { AppState } from \"../../models\";\nimport LinkComponent from \"../LinkComponent\";\nimport { \n  getTrackDetailsAction,\n  getTrackParametersAction\n} from \"../../actions/trackAction\";\nimport {\n  getArtistTopTracksAction\n} from \"../../actions/artistAction\";\nimport HomeIcon from \"../../components/HomeIcon\";\nimport CircularIndeterminate from \"../../components/LoadingSpinner\";\n\n// TODO: Headeing属性にcontentを持たせろという警告が出ているので修正する\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      backgroundColor: 'black',\n      marginTop: 50\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n      textAlign: 'center'\n    },\n    content: {\n      color: 'white',\n    },\n    cover: {\n      width: 300,\n      height: 300,\n    },\n    tracks: {\n      maxWidth: '50%',\n      marginTop: theme.spacing(1),\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    }\n  }),\n);\n\ninterface Props {\n  token: string;\n  albumTracks: Models.albumTracks;\n  isLoading: boolean;\n  getTrackDetails: (payload: getDetailKey) => void;\n  getTrackParameters: (payload: getDetailKey) => void;\n  getArtistTopTracks: (payload: ArtistTopTracksRequestKey) => void;\n}\n\nconst AlbumTrackLayout: React.FC<Props> = ({\n  token,\n  albumTracks,\n  isLoading,\n  getTrackDetails,\n  getTrackParameters,\n  getArtistTopTracks\n}) => {\n\n  const classes = useStyles();\n\n  const handleOnTrackDetails = async (searchId: string) => {\n    const payload: getDetailKey = {\n      trackId: searchId,\n      token: token\n    };\n    await getTrackDetails(payload);\n  }\n\n  const handleOnTrackParameters = async (searchId: string) => {\n    const payload: getDetailKey = {\n      trackId: searchId,\n      token: token\n    };\n    await getTrackParameters(payload);\n  }\n\n  const getDetailInformations = async (searchId: string) => {\n    handleOnTrackDetails(searchId);\n    handleOnTrackParameters(searchId);\n  }\n\n  const handleOnTopTracks = async (name: string, id: string, url: string) => {\n    const payload: ArtistTopTracksRequestKey = {\n      artistId: id,\n      token: token,\n      name: name,\n      image: url\n    };\n    await getArtistTopTracks(payload);\n  }\n\n  const action = (searchId: string) => (\n    <LinkComponent src={`/show/${searchId}`}>\n      <Button size=\"small\" color=\"primary\" onClick={() => getDetailInformations(searchId)}>\n        <DetailsIcon />\n      </Button>           \n    </LinkComponent>\n  );\n  \n  return (\n    <>\n      { isLoading === false ?\n          <div>\n            <Card className={classes.root}>\n              <LinkComponent src={\"/\"}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<HomeIcon />}\n                  style={{ marginRight: '30px' }}\n                >\n                  Home\n                </Button>\n              </LinkComponent>\n              <CardMedia\n                className={classes.cover}\n                image={ albumTracks.album.url }\n                title={ albumTracks.album.name }\n              />\n              <div className={classes.details}>\n                <CardContent className={classes.content}>\n                  <h1>{albumTracks.album.name}</h1>\n                  <LinkComponent src={`/artist/${albumTracks.tracks[0].artistId[0]}`}>\n                    <Button variant=\"contained\"\n                      onClick={() => handleOnTopTracks(\n                      albumTracks.tracks[0].artist[0],\n                      albumTracks.tracks[0].artistId[0],\n                      albumTracks.album.url)}>{albumTracks.tracks[0].artist[0]}</Button>\n                  </LinkComponent>\n                </CardContent>\n              </div>\n            </Card>\n          </div>\n          :\n          <CircularIndeterminate />\n      }\n\n       { isLoading === false ?\n              ( albumTracks.tracks.length > 0 ? albumTracks.tracks.map(tk =>\n               <div key={tk.id} className={classes.tracks}>\n                 <SnackbarContent message={tk.name + \" / \" + tk.artist} action={action(tk.id)} />\n               </div>\n              )\n              : \n              <>\n                <div className=\"artist\">\n                  <h1>No Result</h1>\n                  <img\n                    alt=\"NoResultImage\"\n                    src=\"https://i.scdn.co/image/ab67616d00001e0268b12ccdf28b19a63645d245\"\n                  />\n                </div>\n              </>\n              )\n        : \n        <><h1></h1></>\n      }\n    </>\n  )\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  albumTracks: state.album.albumTracks,\n  isLoading: state.album.isLoading\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => \n  bindActionCreators({\n    getTrackDetails: payload => getTrackDetailsAction.start(payload),\n    getTrackParameters: payload => getTrackParametersAction.start(payload),\n    getArtistTopTracks: payload => getArtistTopTracksAction.start(payload),\n  }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AlbumTrackLayout);","import React, { useState, useEffect } from 'react';\nimport { StylesProvider } from '@material-ui/styles';\nimport { \n  BrowserRouter as Router, \n  Route,\n  Switch\n} from 'react-router-dom';\nimport withProps from 'recompose/withProps';\n\nimport './App.css';\nimport LoginLayout from \"./containers/LoginLayout\";\nimport { getTokenFromUrl } from \"./containers/LoginLayout\";\nimport TopLayout from \"./containers/TopLayout\";\nimport DetailContainer from \"./containers/details/DetailContainer\";\nimport ArtistTrackLayout from \"./containers/artist-track/ArtistTrackLayout\";\nimport AlbumTrackLayout from \"./containers/album-track/AlbumTrackLayout\"\n\n\nfunction App() {\n  const [token, setToken] = useState<string>(\"\");\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    setToken(hash);\n    window.location.hash = \"\";\n  }, []);\n\n  return (\n    <StylesProvider injectFirst>\n        <div className=\"App\">\n          { token ? \n            <>\n              <Router>\n                <Switch>\n                  <Route exact path='/' component={withProps(() => ({token}))(TopLayout)} />\n                  <Route path='/show/:trackId' component={DetailContainer} />\n                  <Route exact path='/artist/:artistId' component={withProps(() => ({token}))(ArtistTrackLayout)} />\n                  <Route exact path='/album/:albumId' component={withProps(() => ({token}))(AlbumTrackLayout)} />\n                </Switch>\n              </Router>\n            </>\n           : \n            <LoginLayout /> \n          }\n        </div>\n    </StylesProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\n\nimport * as Models from \"../models/TrackModel\";\nimport { searchKey, getDetailKey } from \"../models/UtilModels\";\n\n// 曲名検索\nexport const getTracks = async (serachKey: searchKey) => {\n  const tracks: Models.trackType[] = \n  await axios\n    .get<Models.tracksJsonType>(\n      `https://api.spotify.com/v1/search?q=${serachKey.searchInput}&type=track`,\n      { headers: { Authorization: \"Bearer \" + serachKey.token }}\n    )\n    .then((response) => response.data)\n    .then<Array<Models.trackType>>((res) => {\n      const data = res.tracks.items.map((item) => ({\n        id: item.id,\n        name: item.name,\n        artists: item.artists[0].name,\n        playUrl: item.preview_url,\n        image: item.album.images[1]\n      }));\n      return Promise.resolve(data);\n    })\n    .catch((error) => { return Promise.reject(new Error(error))} );\n  \n  return { tracks }\n}\n\n\n//  詳細表示-基本情報取得\nexport const getTrackDetails = async (getDetailKey: getDetailKey) => {\n  const track: Models.trackBasicDetail = \n  await axios\n    .get(\n      `https://api.spotify.com/v1/tracks/${getDetailKey.trackId}`,\n      {\n        headers: { Authorization: \"Bearer \" + getDetailKey.token },\n      }\n    )\n    .then((response) => response.data)\n    .then((res) => {\n      const data = {\n        id: res.id,\n        name: res.name,\n        artists: res.artists.map((artist: any) => {\n          return artist.name\n        }),\n        playUrl: res.preview_url,\n        image: res.album.images[1]\n      };\n      return Promise.resolve(data);\n    })\n    .catch((error) => Promise.reject(new Error(error)));\n  \n  return { track }\n}\n\n//  詳細表示-パラメータ取得\nexport const getTrackParameters = async (getDetailKey: getDetailKey) => {\n  const track: Models.trackParams = \n  await axios\n    .get<Models.trackJsonParams>(\n      `https://api.spotify.com/v1/audio-features/${getDetailKey.trackId}`,\n      {\n        headers: { Authorization: \"Bearer \" + getDetailKey.token },\n      }\n    )\n    .then((response) => response.data)\n    .then<Models.trackParams>((res) => {\n      const data = {\n        acousticness: res.acousticness,\n        danceability: res.danceability,\n        energy: res.energy,\n        instrumentalness: res.instrumentalness,\n        liveness: res.liveness,\n        valence: res.valence,\n      };\n      return Promise.resolve(data);\n    })\n    .catch((error) => Promise.reject(new Error(error)));\n  \n  return { track }\n}","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\n\nimport * as Model from \"../models/TrackModel\";\nimport * as ActionTypes from \"../constants/spotifyRequestType\";\nimport * as API from \"../apis/tracksApi\";\nimport {\n  getTracksAction,\n  getTrackDetailsAction,\n  getTrackParametersAction\n} from \"../actions/trackAction\";\n\nexport function* getTracksSaga (action: Model.GetTracksStart) {\n  const accsessKey = action.payload;\n  const handler = API.getTracks;\n  const { tracks, error } = yield call(handler, accsessKey);\n  if (tracks && !error) {\n    yield put(getTracksAction.success(tracks))\n  } else {\n    yield put(getTracksAction.faluer());\n  }\n};\n\nexport function* getTrackDetailsSaga (action: Model.GetTrackDetailsStart) {\n  const accsessKey = action.payload;\n  const handler = API.getTrackDetails;\n  const { track, error } = yield call(handler, accsessKey);\n  if (track && !error) {\n    yield put(getTrackDetailsAction.success(track))\n  } else {\n    yield put(getTrackDetailsAction.faluer());\n  }\n};\n\nexport function* getTrackParamertersSaga (action: Model.GetTrackDetailsStart) {\n  const accsessKey = action.payload;\n  const handler = API.getTrackParameters;\n  const { track, error } = yield call(handler, accsessKey);\n  if (track && !error) {\n    yield put(getTrackParametersAction.success(track))\n  } else {\n    yield put(getTrackParametersAction.faluer());\n  }\n};\n\nexport function* watchTracks () {\n  yield takeEvery(ActionTypes.GET_TRACKS_START, getTracksSaga);\n  yield takeEvery(ActionTypes.GET_TRACK_DETAILS_START, getTrackDetailsSaga);\n  yield takeEvery(ActionTypes.GET_TRACK_PARAMETERS_START, getTrackParamertersSaga)\n};\n\nexport default function* rootSaga () {\n  yield all([fork(watchTracks)]);\n};","import axios from \"axios\";\n\nimport * as Models from \"../models/ArtistModel\";\nimport { searchKey } from \"../models/UtilModels\";\n\n// アーティスト検索\nexport const getArtist = async (searchKey: searchKey) => {\n  const artist = \n  await axios\n    .get<Models.artistJsonType>(\n      `https://api.spotify.com/v1/search?q=${searchKey.searchInput}&type=artist`,\n      { headers : { Authorization: \"Bearer \" + searchKey.token }}\n    )\n    .then((response) => response.data)\n    .then((res) => {\n      const data = res.artists.items.map((item) => ({\n        id: item.id,\n        name: item.name,\n        image: item.images[1]\n      }));\n      return Promise.resolve(data);\n    })\n    .catch((error) => Promise.reject(new Error(error)));\n  \n  return { artist };\n}\n\n\n// アーティストTOP曲取得\n//TODO:クソ見づらいのでリファクタリング\nexport const getArtistTopTracks = async (requestKey: Models.requestKey) => {\n  const topTracks = \n  await axios\n    .get(\n      `https://api.spotify.com/v1/artists/${requestKey.artistId}/top-tracks?market=JP`,\n      { headers : { Authorization: \"Bearer \" + requestKey.token }}\n    )\n    .then((response) => response.data)\n    .then((res) => {\n      const data = res.tracks.map((item: any) => ({\n        id: item.id,\n        name: item.name,\n        artists: item.artists.map((artist: any) => {\n          return artist.name\n        }),\n        playUrl: item.preview_url,\n        image: item.album.images[1]\n      }));\n      const topTracks: Models.artistTopTracks = {\n        tracks: data,\n        artist: {\n          name: requestKey.name,\n          image: requestKey.image\n        }\n      }\n      return Promise.resolve(topTracks);\n    })\n    .catch((error) => Promise.reject(new Error(error)));\n  \n  return { topTracks };\n}","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\n\nimport * as Model from \"../models/ArtistModel\";\nimport * as ActionTypes from \"../constants/spotifyRequestType\";\nimport * as API from \"../apis/artistApi\";\nimport {\n  getArtistAction,\n  getArtistTopTracksAction\n} from \"../actions/artistAction\";\n\nexport function* getArtistSaga (action: Model.GetArtistStart) {\n  const accsessKey = action.payload;\n  const handler = API.getArtist;\n  const { artist, error } = yield call(handler, accsessKey);\n  if (artist && !error) {\n    yield put(getArtistAction.success(artist));\n  } else {\n    yield put(getArtistAction.failure());\n  }\n};\n\nexport function* getArtistTopTracksSaga (action: Model.GetArtistTopTracksStart) {\n  const accsessKey = action.payload;\n  const handler = API.getArtistTopTracks;\n  const { topTracks, error } = yield call(handler, accsessKey);\n  if (topTracks && !error) {\n    yield put(getArtistTopTracksAction.success(topTracks));\n  } else {\n    yield put(getArtistTopTracksAction.failure());\n  }\n};\n\nexport function* watchArtists () {\n  yield takeEvery(ActionTypes.GET_ARTISTS_START, getArtistSaga);\n  yield takeEvery(ActionTypes.GET_ARTIST_TOP_TRACK_START, getArtistTopTracksSaga)\n};\n\nexport default function* rootSaga () {\n  yield all([fork(watchArtists)]);\n};\n","import axios from \"axios\";\n\nimport * as Models from \"../models/AlbumModel\";\nimport { searchKey, albumTracksRequestKey } from \"../models/UtilModels\";\n\n// アルバム検索\nexport const getAlbum = async (searchKey: searchKey) => {\n  const album = \n  await axios\n    .get<Models.albumJsonType>(\n      `https://api.spotify.com/v1/search?q=${searchKey.searchInput}&type=album`,\n      { headers : { Authorization: \"Bearer \" + searchKey.token }}\n    )\n    .then((response) => response.data)\n    .then((res) => {\n      const data = res.albums.items.map((item) => ({\n        id: item.id,\n        name: item.name,\n        artist: item.artists[0].name,\n        image: item.images[1]\n      }));\n      return Promise.resolve(data);\n    })\n    .catch((error) => Promise.reject(new Error(error)));\n  \n  return { album };\n}\n\n// アルバムの曲取得\n// TODO: とりあえず動いているけど無駄が多いにありそうなコードなので、見直す\nexport const getAlbumTracks = async (requestKey: albumTracksRequestKey) => {\n  const albumTracks: Models.albumTracks = \n  await axios\n    .get(\n      `https://api.spotify.com/v1/albums/${requestKey.albumId}/tracks?market=JP`,\n      { headers : { Authorization: \"Bearer \" + requestKey.token }}\n    )\n    .then((response) => response.data)\n    .then((res) => {\n      const data = res.items.map((item: any) => ({\n        id: item.id,\n        name: item.name,\n        tarckNumber: item.track_number,\n        artist: item.artists.map((artist: any) => {\n          return artist.name;\n        }),\n        artistId: item.artists.map((artist: any) => {\n          return artist.id;\n        })\n      }));\n\n      const tracks: Models.albumTracks = {\n        tracks: data,\n        album: {\n          width: 300,\n          height: 300,\n          url: requestKey.image.url,\n          name: requestKey.image.name\n        }\n      }\n      return Promise.resolve(tracks);\n    })\n    .catch((error) => Promise.reject(new Error(error)));\n  \n  return { albumTracks };\n}","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\n\nimport * as Model from \"../models/AlbumModel\";\nimport * as ActionTypes from \"../constants/spotifyRequestType\";\nimport * as API from \"../apis/albumApi\";\nimport {\n  getAlbumAction,\n  getAlbumTracksAction\n} from \"../actions/albumAction\";\n\nexport function* getAlbumSaga (action: Model.GetAlbumsStart) {\n  const accsessKey = action.payload;\n  const handler = API.getAlbum;\n  const { album, error } = yield call(handler, accsessKey);\n  if (album && !error) {\n    yield put(getAlbumAction.success(album));\n  } else {\n    yield put(getAlbumAction.failure());\n  }\n};\n\nexport function* getAlbumTracksSaga (action: Model.GetAlbumTracksStart) {\n  const accsessKey = action.payload;\n  const handler = API.getAlbumTracks;\n  const { albumTracks, error } = yield call(handler, accsessKey);\n  if (albumTracks && !error) {\n    yield put(getAlbumTracksAction.success(albumTracks));\n  } else {\n    yield put(getAlbumTracksAction.failure());\n  }\n};\n\nexport function* watchAlbums () {\n  yield takeEvery(ActionTypes.GET_ALBUMS_START, getAlbumSaga);\n  yield takeEvery(ActionTypes.GET_ALBUM_TRACKS_START, getAlbumTracksSaga);\n};\n\nexport default function* rootSaga () {\n  yield all([fork(watchAlbums)]);\n};\n","import { fork } from \"redux-saga/effects\";\n\nimport trackSaga from \"./trackSaga\";\nimport artistSaga from \"./artistSaga\"\nimport albumSaga from \"./albumSaga\";\n\n\nexport default function* rootSaga () {\n  yield fork(trackSaga);\n  yield fork(artistSaga);\n  yield fork(albumSaga);\n};","import { Reducer } from \"redux\";\n\nimport * as ActionType from \"../constants/spotifyRequestType\";\nimport * as Models from \"../models/TrackModel\";\n\nconst initialState: Models.trackState = {\n  tracks: [],\n  track: {\n    id: \"\",\n    name: \"\",\n    artists: [],\n    playUrl: \"\",\n    image: {\n      height: 0,\n      url: \"\",\n      width: 0,\n    }\n  },\n  trackParams: {\n    acousticness: 0,\n    danceability: 0,\n    energy: 0,\n    instrumentalness: 0,\n    liveness: 0,\n    valence: 0,\n  },\n  isLoading: false\n};\n\nconst trackReducer: Reducer<Models.trackState, Models.trackAction> = (\n  state: Models.trackState = initialState,\n  action: Models.trackAction\n): Models.trackState => {\n  switch(action.type) {\n    case ActionType.GET_TRACKS_START:\n      return {\n        ...state,\n        isLoading: true\n      }\n    case ActionType.GET_TRACKS_SUCCESS:\n      return {\n        ...state,\n        tracks: action.payload,\n        isLoading: false\n      }\n    case ActionType.GET_TRACKS_FAILURE:\n      return {\n        ...state,\n        isLoading: false\n      }\n    case ActionType.GET_TRACK_DETAILS_START:\n      return {\n        ...state,\n        isLoading: true\n      }\n    case ActionType.GET_TRACK_DETAILS_SUCCESS:\n      return {\n        ...state,\n        track: action.payload,\n        isLoading: false\n      }\n    case ActionType.GET_TRACK_DETAILS_FAILURE:\n      return {\n        ...state,\n        isLoading: false\n      }\n    case ActionType.GET_TRACK_PARAMETERS_START:\n      return {\n        ...state,\n        isLoading: true\n      }\n    case ActionType.GET_TRACK_PARAMETERS_SUCCESS:\n      return {\n        ...state,\n        trackParams: action.payload,\n        isLoading: false\n      }\n    case ActionType.GET_TRACK_PARAMETERS_FAILURE:\n      return {\n        ...state,\n        isLoading: false\n      }\n    default:\n      return state;\n  }\n};\n\nexport default trackReducer;\n","import { Reducer } from \"redux\";\n\nimport * as ActionType from \"../constants/spotifyRequestType\";\nimport * as Models from \"../models/AlbumModel\";\n\nconst initialState: Models.albumState = {\n  albums: [],\n  albumTracks: {\n    tracks: [],\n    album: {\n      url: '',\n      name: '',\n      height: 0,\n      width: 0\n    },\n  },\n  isLoading: false\n};\n\nconst albumReducer: Reducer<Models.albumState, Models.albumAction> = (\n  state: Models.albumState = initialState,\n  action: Models.albumAction\n): Models.albumState => {\n  switch (action.type) {\n    case ActionType.GET_ALBUMS_START:\n      return {\n        ...state,\n        isLoading: true\n      }\n    case ActionType.GET_ALBUMS_SUCCESS:\n      return {\n        ...state,\n        albums: action.payload,\n        isLoading: false\n      }\n    case ActionType.GET_ALBUMS_FAILURE:\n      return {\n        ...state,\n        isLoading: false\n      }\n    case ActionType.GET_ALBUM_TRACKS_START:\n      return {\n        ...state,\n        isLoading: true\n      }\n    case ActionType.GET_ALBUM_TRACKS_SUCCESS:\n      return {\n        ...state,\n        albumTracks: action.payload,\n        isLoading: false\n      }\n    case ActionType.GET_ALBUM_TRACKS_FAILURE:\n      return {\n        ...state,\n        isLoading: false\n      }\n    default:\n      return state;\n  }\n};\n\nexport default albumReducer;\n","import { Reducer } from \"redux\";\n\nimport * as ActionType from \"../constants/spotifyRequestType\";\nimport * as Models from \"../models/ArtistModel\";\n\nconst initialState: Models.artistState = {\n  artist: [],\n  topTracks: {\n    tracks: [],\n    artist: {\n      name: '',\n      image: '',\n    },\n  },\n  isLoading: false\n};\n\n\nconst artistReducer: Reducer<Models.artistState, Models.artistAction> = (\n  state: Models.artistState = initialState,\n  action: Models.artistAction\n): Models.artistState => {\n  switch (action.type) {\n    case ActionType.GET_ARTISTS_START:\n      return {\n        ...state,\n        isLoading: true\n      }\n    case ActionType.GET_ARTISTS_SUCCESS:\n      return {\n        ...state,\n        artist: action.payload,\n        isLoading: false\n      }\n    case ActionType.GET_ARTISTS_FAILURE:\n      return {\n        ...state,\n        isLoading: false\n      }\n    case ActionType.GET_ARTIST_TOP_TRACK_START:\n      return {\n        ...state,\n        isLoading: true\n      }\n    case ActionType.GET_ARTIST_TOP_TRACK_SUCCESS:\n      return {\n        ...state,\n        topTracks: {\n          tracks: action.payload.tracks,\n          artist: action.payload.artist,\n        },\n        isLoading: false\n      }\n    case ActionType.GET_ARTIST_TOP_TRACK_FAILURE:\n      return {\n        ...state,\n        isLoading: false\n      }\n    default:\n      return state;\n  }\n}\n\nexport default artistReducer;","import { History } from \"history\";\nimport { connectRouter } from \"connected-react-router\";\nimport { combineReducers } from \"redux\";\n\nimport trackReducer from \"./trackReducer\";\nimport albumReducer from \"./albumReducer\";\nimport artistReducer from \"./artistReducer\";\n\nconst rootReducer = (history: History<any>) => \n  combineReducers({\n    router: connectRouter(history),\n    track: trackReducer,\n    album: albumReducer,\n    artist: artistReducer\n  });\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport { createBrowserHistory } from \"history\";\nimport configureStore from \"./configureStore\";\n\nconst history = createBrowserHistory();\nconst store = configureStore(history);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { applyMiddleware, createStore } from \"redux\";\nimport { History } from \"history\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./reducers\";\n\nexport default function configureStore (history: History) {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const store = createStore(\n    rootReducer(history),\n    applyMiddleware(sagaMiddleware)\n  );\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n\n"],"sourceRoot":""}