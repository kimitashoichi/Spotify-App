[{"/front/src/index.tsx":"1","/front/src/reportWebVitals.ts":"2","/front/src/App.tsx":"3","/front/src/containers/LoginLayout.tsx":"4","/front/src/configureStore.ts":"5","/front/src/reducers/index.ts":"6","/front/src/sagas/index.ts":"7","/front/src/reducers/trackReducer.ts":"8","/front/src/sagas/trackSaga.ts":"9","/front/src/constants/spotifyRequestType.ts":"10","/front/src/apis/tracksApi.ts":"11","/front/src/reducers/albumReducer.ts":"12","/front/src/reducers/artistReducer.ts":"13","/front/src/sagas/artistSaga.ts":"14","/front/src/apis/artistApi.ts":"15","/front/src/sagas/albumSaga.ts":"16","/front/src/apis/albumApi.ts":"17","/front/src/containers/track/TrackLayoutComponent.tsx":"18","/front/src/containers/artist/ArtistLayoutComponent.tsx":"19","/front/src/containers/album/AlbumLayoutComponent.tsx":"20","/front/src/containers/TopLayout.tsx":"21","/front/src/containers/styles.tsx":"22","/front/src/models/TrackModel.ts":"23","/front/src/actions/trackAction.ts":"24","/front/src/containers/details/DetailBasic.tsx":"25","/front/src/containers/LinkComponent.tsx":"26","/front/src/containers/details/DetailContainer.tsx":"27","/front/src/containers/details/DetailParamerters.tsx":"28","/front/src/models/ArtistModel.ts":"29","/front/src/containers/artist-track/ArtistTrackLayout.tsx":"30","/front/src/actions/artistAction.ts":"31","/front/src/actions/albumAction.ts":"32","/front/src/containers/album-track/AlbumTrackLayout.tsx":"33","/front/src/containers/AllSearchComponent.tsx":"34","/front/src/components/ParamsDescriptionComponent.tsx":"35"},{"size":713,"mtime":1607382840204,"results":"36","hashOfConfig":"37"},{"size":425,"mtime":1607000525983,"results":"38","hashOfConfig":"37"},{"size":1567,"mtime":1608550311159,"results":"39","hashOfConfig":"37"},{"size":769,"mtime":1607342840145,"results":"40","hashOfConfig":"37"},{"size":796,"mtime":1607382840203,"results":"41","hashOfConfig":"37"},{"size":479,"mtime":1607520939012,"results":"42","hashOfConfig":"37"},{"size":275,"mtime":1607520939015,"results":"43","hashOfConfig":"37"},{"size":1864,"mtime":1607691971046,"results":"44","hashOfConfig":"37"},{"size":1726,"mtime":1608550311165,"results":"45","hashOfConfig":"37"},{"size":1642,"mtime":1608362882457,"results":"46","hashOfConfig":"37"},{"size":2364,"mtime":1608550311161,"results":"47","hashOfConfig":"37"},{"size":1327,"mtime":1608452338115,"results":"48","hashOfConfig":"37"},{"size":1396,"mtime":1608459718628,"results":"49","hashOfConfig":"37"},{"size":1326,"mtime":1608550311165,"results":"50","hashOfConfig":"37"},{"size":1730,"mtime":1608550311160,"results":"51","hashOfConfig":"37"},{"size":1252,"mtime":1608550311165,"results":"52","hashOfConfig":"37"},{"size":1920,"mtime":1608553813333,"results":"53","hashOfConfig":"37"},{"size":2678,"mtime":1608463336527,"results":"54","hashOfConfig":"37"},{"size":2145,"mtime":1608550311163,"results":"55","hashOfConfig":"37"},{"size":2085,"mtime":1608550311162,"results":"56","hashOfConfig":"37"},{"size":2016,"mtime":1608463336525,"results":"57","hashOfConfig":"37"},{"size":1001,"mtime":1608463336525,"results":"58","hashOfConfig":"37"},{"size":3382,"mtime":1607691971046,"results":"59","hashOfConfig":"37"},{"size":1658,"mtime":1607691971041,"results":"60","hashOfConfig":"37"},{"size":2140,"mtime":1608555129867,"results":"61","hashOfConfig":"37"},{"size":329,"mtime":1607851357385,"results":"62","hashOfConfig":"37"},{"size":656,"mtime":1608550311164,"results":"63","hashOfConfig":"37"},{"size":4442,"mtime":1608550311164,"results":"64","hashOfConfig":"37"},{"size":2337,"mtime":1607989264667,"results":"65","hashOfConfig":"37"},{"size":4566,"mtime":1608550311163,"results":"66","hashOfConfig":"37"},{"size":1183,"mtime":1608362882455,"results":"67","hashOfConfig":"37"},{"size":1039,"mtime":1608452338111,"results":"68","hashOfConfig":"37"},{"size":5406,"mtime":1608553813334,"results":"69","hashOfConfig":"37"},{"size":2690,"mtime":1608463336524,"results":"70","hashOfConfig":"37"},{"size":4310,"mtime":1608555652431,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1jjtmvb",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/front/src/index.tsx",[],["151","152"],"/front/src/reportWebVitals.ts",[],"/front/src/App.tsx",[],"/front/src/containers/LoginLayout.tsx",[],"/front/src/configureStore.ts",["153","154"],"import { applyMiddleware, createStore } from \"redux\";\nimport { History } from \"history\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { compose } from '@material-ui/system';\n\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./reducers\";\nimport { ExtendedWindow } from \"./reduxDevToolExtensionType\";\n\ndeclare var window: ExtendedWindow;\n\nexport default function configureStore (history: History) {\n  const sagaMiddleware = createSagaMiddleware();\n  const composeReduxDevToolExtension = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const enhanser = composeReduxDevToolExtension(applyMiddleware(sagaMiddleware));\n\n  const store = createStore(\n    rootReducer(history),\n    enhanser\n  );\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n\n","/front/src/reducers/index.ts",[],"/front/src/sagas/index.ts",[],"/front/src/reducers/trackReducer.ts",[],"/front/src/sagas/trackSaga.ts",[],"/front/src/constants/spotifyRequestType.ts",[],"/front/src/apis/tracksApi.ts",[],"/front/src/reducers/albumReducer.ts",[],"/front/src/reducers/artistReducer.ts",[],"/front/src/sagas/artistSaga.ts",["155"],"import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\n\nimport * as Model from \"../models/ArtistModel\";\nimport * as ActionTypes from \"../constants/spotifyRequestType\";\nimport * as API from \"../apis/artistApi\";\nimport {\n  getArtistAction,\n  getArtistTopTracksAction\n} from \"../actions/artistAction\";\nimport { Action } from 'history';\n\nexport function* getArtistSaga (action: Model.GetArtistStart) {\n  const accsessKey = action.payload;\n  const handler = API.getArtist;\n  const { artist, error } = yield call(handler, accsessKey);\n  if (artist && !error) {\n    yield put(getArtistAction.success(artist));\n  } else {\n    yield put(getArtistAction.failure());\n  }\n};\n\nexport function* getArtistTopTracksSaga (action: Model.GetArtistTopTracksStart) {\n  const accsessKey = action.payload;\n  const handler = API.getArtistTopTracks;\n  const { topTracks, error } = yield call(handler, accsessKey);\n  if (topTracks && !error) {\n    yield put(getArtistTopTracksAction.success(topTracks));\n  } else {\n    yield put(getArtistTopTracksAction.failure());\n  }\n};\n\nexport function* watchArtists () {\n  yield takeEvery(ActionTypes.GET_ARTISTS_START, getArtistSaga);\n  yield takeEvery(ActionTypes.GET_ARTIST_TOP_TRACK_START, getArtistTopTracksSaga)\n};\n\nexport default function* rootSaga () {\n  yield all([fork(watchArtists)]);\n};\n","/front/src/apis/artistApi.ts",["156"],"import axios from \"axios\";\n\nimport * as Models from \"../models/ArtistModel\";\nimport * as TrackModel from \"../models/TrackModel\";\n\n// アーティスト検索\nexport const getArtist = async (searchKey: Models.searchKey) => {\n  const artist = \n  await axios\n    .get<Models.artistJsonType>(\n      `https://api.spotify.com/v1/search?q=${searchKey.searchInput}&type=artist`,\n      { headers : { Authorization: \"Bearer \" + searchKey.token }}\n    )\n    .then((response) => response.data)\n    .then((res) => {\n      const data = res.artists.items.map((item) => ({\n        id: item.id,\n        name: item.name,\n        image: item.images[1]\n      }));\n      return Promise.resolve(data);\n    })\n    .catch((error) => Promise.reject(new Error(error)));\n  \n  return { artist };\n}\n\n\n// アーティスト検索\nexport const getArtistTopTracks = async (requestKey: Models.requestKey) => {\n  const topTracks: TrackModel.trackType[] = \n  await axios\n    .get(\n      `https://api.spotify.com/v1/artists/${requestKey.artistId}/top-tracks?market=JP`,\n      { headers : { Authorization: \"Bearer \" + requestKey.token }}\n    )\n    .then((response) => response.data)\n    .then((res) => {\n      const data = res.tracks.map((item: any) => ({\n        id: item.id,\n        name: item.name,\n        artists: item.artists[0].name,\n        playUrl: item.preview_url,\n        image: item.album.images[1]\n      }));\n      console.log('top track data', data);\n      return Promise.resolve(data);\n    })\n    .catch((error) => Promise.reject(new Error(error)));\n  \n  return { topTracks };\n}","/front/src/sagas/albumSaga.ts",[],"/front/src/apis/albumApi.ts",[],"/front/src/containers/track/TrackLayoutComponent.tsx",[],"/front/src/containers/artist/ArtistLayoutComponent.tsx",[],"/front/src/containers/album/AlbumLayoutComponent.tsx",[],"/front/src/containers/TopLayout.tsx",[],"/front/src/containers/styles.tsx",[],"/front/src/models/TrackModel.ts",[],["157","158"],"/front/src/actions/trackAction.ts",[],"/front/src/containers/details/DetailBasic.tsx",[],"/front/src/containers/LinkComponent.tsx",[],"/front/src/containers/details/DetailContainer.tsx",[],"/front/src/containers/details/DetailParamerters.tsx",["159","160","161","162","163","164"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis,\n} from 'recharts';\n\nimport { Theme, createStyles, makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nimport { AppState } from \"../../models\";\nimport * as Models from \"../../models/TrackModel\";\n\ninterface StateProps {\n  track: Models.trackParams;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: 'black',\n      marginTop: 50\n    },\n    details: {\n      display: 'flex',\n      justifyContent: 'center',\n      textAlign: 'center'\n    },\n    content: {\n      color: 'white',\n    },\n    cover: {\n      width: 300,\n      height: 300,\n    },\n    controls: {\n      display: 'flex',\n      justifyContent: 'space-around',\n      WebkitJustifyContent: 'space-around'\n    },\n    playIcon: {\n      height: 38,\n      width: 38,\n    }\n  }),\n);\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }),\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }),\n)(TableRow);\n\nconst DetaiParamslLayout: React.FC<StateProps> = ({\n  track\n}) => {\n  const classes = useStyles();\n\n  const chartData = [\n    {\n      subject: 'Acousticness',\n      params: track.acousticness * 100\n    },\n    {\n      subject: 'Danceability',\n      params: track.danceability * 100\n    },\n    {\n      subject: 'Energy',\n      params: track.energy * 100\n    },\n    {\n      subject: 'Instrumentalness',\n      params: track.instrumentalness * 100\n    },\n    {\n      subject: 'Liveness',\n      params: track.liveness * 100\n    },\n    {\n      subject: 'Valence',\n      params: track.valence * 100\n    },\n  ];\n\n  function createData(name: string, params: number) {\n    return { name, params};\n  }\n\n  const rows = [\n    createData('Acousticness', chartData[0].params),\n    createData('Danceability', chartData[1].params),\n    createData('Energy', chartData[2].params),\n    createData('Instrumentalness', chartData[3].params),\n    createData('Liveness', chartData[4].params),\n    createData('Valence', chartData[5].params),\n  ];\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <div className={classes.controls}>\n              <RadarChart width={450} height={300} data={chartData} >\n                <PolarGrid />\n                <PolarAngleAxis dataKey=\"subject\" tick={{ fill: 'white' }}/>\n                {/* <PolarRadiusAxis /> データの基準線みたいなAPIコンポーネント*/}\n                <Radar name=\"Mike\" dataKey=\"params\" stroke=\"#84d895\" fill=\"#84d895\" fillOpacity={0.8} />\n              </RadarChart>\n              <TableContainer component={Paper}>\n                <Table aria-label=\"customized table\">\n                  <TableBody>\n                    {rows.map((row) => (\n                      <StyledTableRow key={row.name}>\n                        <StyledTableCell component=\"th\" scope=\"row\">{row.name}</StyledTableCell>\n                        <StyledTableCell align=\"center\">{row.params}</StyledTableCell>\n                      </StyledTableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </div>\n          </CardContent>\n        </div>\n      </Card>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  track: state.track.trackParams\n});\n\nexport default connect(\n  mapStateToProps\n)(DetaiParamslLayout);","/front/src/models/ArtistModel.ts",[],["165","166"],"/front/src/containers/artist-track/ArtistTrackLayout.tsx",["167"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch, bindActionCreators } from \"redux\";\n\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport * as Models from \"../../models/TrackModel\";\nimport { artistTopTracks } from \"../../models/ArtistModel\";\nimport { AppState } from \"../../models\";\nimport LinkComponent from \"../LinkComponent\";\nimport { \n  getTrackDetailsAction,\n  getTrackParametersAction\n} from \"../../actions/trackAction\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      backgroundColor: 'black',\n      marginTop: 50\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n      textAlign: 'center'\n    },\n    content: {\n      color: 'white',\n    },\n    cover: {\n      width: 300,\n      height: 300,\n    },\n    tracks: {\n      maxWidth: '50%',\n      marginTop: theme.spacing(1),\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    }\n  }),\n);\n\n\ninterface Props {\n  token: string;\n  artistTopTracks: artistTopTracks;\n  isLoading: boolean;\n  getTrackDetails: (payload: Models.getDetailKey) => void;\n  getTrackParameters: (payload: Models.getDetailKey) => void;\n}\n\nconst ArtistTrackLayout: React.FC<Props> = ({\n  token,\n  artistTopTracks,\n  isLoading,\n  getTrackDetails,\n  getTrackParameters\n}) => {\n\n  const classes = useStyles();\n\n  const handleOnTrackDetails = async (searchId: string) => {\n    const payload: Models.getDetailKey = {\n      trackId: searchId,\n      token: token\n    };\n    await getTrackDetails(payload);\n  }\n\n  const handleOnTrackParameters = async (searchId: string) => {\n    const payload: Models.getDetailKey = {\n      trackId: searchId,\n      token: token\n    };\n    await getTrackParameters(payload);\n  }\n\n  const getDetailInformations = async (searchId: string) => {\n    handleOnTrackDetails(searchId);\n    handleOnTrackParameters(searchId);\n  }\n\n  return (\n    <>\n      { isLoading === false ?\n          <div>\n            <Card className={classes.root}>\n              <CardMedia\n                className={classes.cover}\n                image={artistTopTracks.artist.image}\n                title={artistTopTracks.artist.name}\n              />\n              <div className={classes.details}>\n                <CardContent className={classes.content}>\n                  <h1>{artistTopTracks.artist.name}</h1>\n                </CardContent>\n              </div>\n            </Card>\n          </div>\n          :\n          <h1>Now Loading ....</h1>\n      }\n\n      { isLoading === false ?\n        ( artistTopTracks.tracks.length > 0 ? artistTopTracks.tracks.map(tk =>\n          <div key={tk.id} className={classes.tracks}>\n            <ListItem alignItems=\"flex-start\">\n              <ListItemAvatar>\n                <Avatar alt={tk.name} src={tk.image.url} />\n              </ListItemAvatar>\n              <ListItemText primary={tk.name} />\n              <LinkComponent src={`/show/${tk.id}`}>\n                <Button color=\"secondary\" size=\"small\"\n                  onClick={() => getDetailInformations(tk.id)}>Go Detail</Button>           \n              </LinkComponent>\n            </ListItem>\n            <Divider variant=\"inset\" />\n          </div>\n          )\n        : \n          <>\n            <div className=\"artist\">\n              <h1>No Result</h1>\n              <img\n                alt=\"NoResultImage\"\n                src=\"https://i.scdn.co/image/ab67616d00001e0268b12ccdf28b19a63645d245\"\n              />\n            </div>\n          </>\n        )\n        : \n        <>\n          <h1></h1>\n        </>\n      }\n    </>\n  )\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  artistTopTracks: state.artist.topTracks,\n  isLoading: state.artist.isLoading\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => \n  bindActionCreators({\n    getTrackDetails: payload => getTrackDetailsAction.start(payload),\n    getTrackParameters: payload => getTrackParametersAction.start(payload),\n  }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ArtistTrackLayout);","/front/src/actions/artistAction.ts",[],"/front/src/actions/albumAction.ts",[],"/front/src/containers/album-track/AlbumTrackLayout.tsx",["168"],"/front/src/containers/AllSearchComponent.tsx",["169"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport * as TrackModel from \"../models/TrackModel\";\nimport * as AlbumModel from \"../models/AlbumModel\";\nimport * as ArtistModel from \"../models/ArtistModel\";\nimport { getAlbumAction } from \"../actions/albumAction\";\nimport { getArtistAction } from \"../actions/artistAction\";\nimport { getTracksAction } from \"../actions/trackAction\";\nimport { AppState } from \"../models\";\n\n\ninterface Props {\n  token: string;\n}\n\ninterface DispathcProps {\n  searchTracks: (payload: TrackModel.searchKey) => void;\n  searchAlbums: (payload: AlbumModel.searchKey) => void;\n  searchArtists: (payload: ArtistModel.searchKey) => void;\n}\n\ntype DefaultProps = Props & DispathcProps;\n\nconst SearchLayout: React.FC<DefaultProps> = ({\n  token,\n  searchTracks,\n  searchAlbums,\n  searchArtists\n}) => {\n  const [searchWord, setSearchWord] = useState<string>(\"\");\n\n  useEffect(() => {\n    searchAllData(); \n  }, [searchWord])\n\n  const handleOnSearchTracks = async () => {\n    const payload: TrackModel.searchKey = {\n      searchInput: searchWord,\n      token: token\n    };\n    if (payload.searchInput !== \"\") {\n      await searchTracks(payload);\n    }\n  };\n\n  const handleOnSearchAlbums = async () => {\n    const payload: TrackModel.searchKey = {\n      searchInput: searchWord,\n      token: token\n    };\n    if (payload.searchInput !== \"\") {\n      await searchAlbums(payload);\n    }\n  };\n\n  const handleOnSearchArtists = async () => {\n    const payload: TrackModel.searchKey = {\n      searchInput: searchWord,\n      token: token\n    };\n    if (payload.searchInput !== \"\") {\n      await searchArtists(payload);\n    }\n  };\n\n  const searchAllData = async () => {\n    handleOnSearchTracks();\n    handleOnSearchAlbums();\n    handleOnSearchArtists();\n  }\n\n  const handleOnReset = async () => {\n    const payload: TrackModel.searchKey = {\n      searchInput: \" \",\n      token: token\n    };\n    setSearchWord(\"\");\n    await searchTracks(payload);\n  }\n\n  return (\n    <>\n      <input\n        placeholder=\"Input Keyword...\"\n        value={searchWord}\n        onChange={(e) => setSearchWord(e.target.value)}\n      />\n      <button onClick={handleOnReset}>Reset</button>\n    </>\n  )\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  //\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => \n bindActionCreators({\n  searchTracks: payload => getTracksAction.start(payload),\n  searchAlbums: payload => getAlbumAction.start(payload),\n  searchArtists: payload => getArtistAction.start(payload)\n }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchLayout);\n","/front/src/components/ParamsDescriptionComponent.tsx",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":14,"column":67,"nodeType":"176","messageId":"177","endLine":14,"endColumn":69},{"ruleId":"174","severity":1,"message":"175","line":14,"column":114,"nodeType":"176","messageId":"177","endLine":14,"endColumn":116},{"ruleId":"178","severity":1,"message":"179","line":10,"column":10,"nodeType":"180","messageId":"181","endLine":10,"endColumn":16},{"ruleId":"178","severity":1,"message":"182","line":4,"column":13,"nodeType":"180","messageId":"181","endLine":4,"endColumn":23},{"ruleId":"170","replacedBy":"183"},{"ruleId":"172","replacedBy":"184"},{"ruleId":"178","severity":1,"message":"185","line":4,"column":49,"nodeType":"180","messageId":"181","endLine":4,"endColumn":64},{"ruleId":"178","severity":1,"message":"186","line":7,"column":43,"nodeType":"180","messageId":"181","endLine":7,"endColumn":51},{"ruleId":"178","severity":1,"message":"187","line":12,"column":8,"nodeType":"180","messageId":"181","endLine":12,"endColumn":17},{"ruleId":"178","severity":1,"message":"188","line":17,"column":8,"nodeType":"180","messageId":"181","endLine":17,"endColumn":17},{"ruleId":"178","severity":1,"message":"189","line":18,"column":8,"nodeType":"180","messageId":"181","endLine":18,"endColumn":18},{"ruleId":"178","severity":1,"message":"190","line":19,"column":8,"nodeType":"180","messageId":"181","endLine":19,"endColumn":21},{"ruleId":"170","replacedBy":"191"},{"ruleId":"172","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":144,"column":11,"nodeType":"195","endLine":144,"endColumn":15},{"ruleId":"193","severity":1,"message":"194","line":161,"column":11,"nodeType":"195","endLine":161,"endColumn":15},{"ruleId":"196","severity":1,"message":"197","line":36,"column":6,"nodeType":"198","endLine":36,"endColumn":18,"suggestions":"199"},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","@typescript-eslint/no-unused-vars","'Action' is defined but never used.","Identifier","unusedVar","'TrackModel' is defined but never used.",["200"],["201"],"'PolarRadiusAxis' is defined but never used.","'useTheme' is defined but never used.","'TableHead' is defined but never used.","'CardMedia' is defined but never used.","'IconButton' is defined but never used.","'PlayArrowIcon' is defined but never used.",["200"],["201"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchAllData'. Either include it or remove the dependency array.","ArrayExpression",["202"],"no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},"Update the dependencies array to be: [searchAllData, searchWord]",{"range":"205","text":"206"},[1023,1035],"[searchAllData, searchWord]"]