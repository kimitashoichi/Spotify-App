[{"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/index.tsx":"1","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/configureStore.ts":"2","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/reportWebVitals.ts":"3","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/App.tsx":"4","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/TopLayout.tsx":"5","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/LoginLayout.tsx":"6","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/artist-track/ArtistTrackLayout.tsx":"7","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/details/DetailContainer.tsx":"8","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/album-track/AlbumTrackLayout.tsx":"9","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/sagas/index.ts":"10","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/reducers/index.ts":"11","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/actions/trackAction.ts":"12","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/actions/artistAction.ts":"13","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/styles.tsx":"14","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/AllSearchComponent.tsx":"15","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/LinkComponent.tsx":"16","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/details/DetailBasic.tsx":"17","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/details/DetailParamerters.tsx":"18","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/album/AlbumLayoutComponent.tsx":"19","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/artist/ArtistLayoutComponent.tsx":"20","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/track/TrackLayoutComponent.tsx":"21","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/components/LoadingSpinner.tsx":"22","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/components/HomeIcon.tsx":"23","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/sagas/artistSaga.ts":"24","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/sagas/trackSaga.ts":"25","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/sagas/albumSaga.ts":"26","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/reducers/artistReducer.ts":"27","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/reducers/albumReducer.ts":"28","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/reducers/trackReducer.ts":"29","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/constants/spotifyRequestType.ts":"30","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/actions/albumAction.ts":"31","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/components/ParamsDescriptionComponent.tsx":"32","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/apis/artistApi.ts":"33","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/apis/tracksApi.ts":"34","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/apis/albumApi.ts":"35"},{"size":713,"mtime":1607382840204,"results":"36","hashOfConfig":"37"},{"size":466,"mtime":1610176776892,"results":"38","hashOfConfig":"37"},{"size":425,"mtime":1607000525983,"results":"39","hashOfConfig":"37"},{"size":1567,"mtime":1608550311159,"results":"40","hashOfConfig":"37"},{"size":2016,"mtime":1608810064696,"results":"41","hashOfConfig":"37"},{"size":3619,"mtime":1608812603498,"results":"42","hashOfConfig":"37"},{"size":5357,"mtime":1608812603499,"results":"43","hashOfConfig":"37"},{"size":726,"mtime":1608810064700,"results":"44","hashOfConfig":"37"},{"size":5733,"mtime":1608812603498,"results":"45","hashOfConfig":"37"},{"size":275,"mtime":1607520939015,"results":"46","hashOfConfig":"37"},{"size":479,"mtime":1607520939012,"results":"47","hashOfConfig":"37"},{"size":1705,"mtime":1608810064691,"results":"48","hashOfConfig":"37"},{"size":1224,"mtime":1608810064690,"results":"49","hashOfConfig":"37"},{"size":902,"mtime":1608810064702,"results":"50","hashOfConfig":"37"},{"size":2148,"mtime":1608810064695,"results":"51","hashOfConfig":"37"},{"size":364,"mtime":1608727423648,"results":"52","hashOfConfig":"37"},{"size":2731,"mtime":1608812603500,"results":"53","hashOfConfig":"37"},{"size":4095,"mtime":1608810064701,"results":"54","hashOfConfig":"37"},{"size":2088,"mtime":1608810064697,"results":"55","hashOfConfig":"37"},{"size":2180,"mtime":1608812603500,"results":"56","hashOfConfig":"37"},{"size":2739,"mtime":1608812603501,"results":"57","hashOfConfig":"37"},{"size":572,"mtime":1608810064694,"results":"58","hashOfConfig":"37"},{"size":277,"mtime":1608727423647,"results":"59","hashOfConfig":"37"},{"size":1292,"mtime":1608810064706,"results":"60","hashOfConfig":"37"},{"size":1726,"mtime":1608550311165,"results":"61","hashOfConfig":"37"},{"size":1252,"mtime":1608550311165,"results":"62","hashOfConfig":"37"},{"size":1396,"mtime":1608459718628,"results":"63","hashOfConfig":"37"},{"size":1327,"mtime":1608729919796,"results":"64","hashOfConfig":"37"},{"size":1864,"mtime":1608730822200,"results":"65","hashOfConfig":"37"},{"size":1642,"mtime":1608362882457,"results":"66","hashOfConfig":"37"},{"size":1162,"mtime":1608810064690,"results":"67","hashOfConfig":"37"},{"size":4324,"mtime":1608812603497,"results":"68","hashOfConfig":"37"},{"size":1778,"mtime":1608810064693,"results":"69","hashOfConfig":"37"},{"size":2461,"mtime":1608810064693,"results":"70","hashOfConfig":"37"},{"size":1994,"mtime":1608810064692,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"st8e12",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/index.tsx",[],["148","149"],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/configureStore.ts",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/reportWebVitals.ts",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/App.tsx",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/TopLayout.tsx",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/LoginLayout.tsx",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/artist-track/ArtistTrackLayout.tsx",["150"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch, bindActionCreators } from \"redux\";\n\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DetailsIcon from '@material-ui/icons/Details';\n\nimport { getDetailKey } from \"../../models/UtilModels\";\nimport { artistTopTracks } from \"../../models/ArtistModel\";\nimport { AppState } from \"../../models\";\nimport LinkComponent from \"../LinkComponent\";\nimport { \n  getTrackDetailsAction,\n  getTrackParametersAction\n} from \"../../actions/trackAction\";\nimport HomeIcon from \"../../components/HomeIcon\";\nimport CircularIndeterminate from \"../../components/LoadingSpinner\";\n\n// TODO: Headeing属性にcontentを持たせろという警告が出ているので修正する\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      backgroundColor: 'black',\n      marginTop: 50\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n      textAlign: 'center'\n    },\n    content: {\n      color: 'white',\n    },\n    cover: {\n      width: 300,\n      height: 300,\n    },\n    tracks: {\n      maxWidth: '50%',\n      marginTop: theme.spacing(1),\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    }\n  }),\n);\n\n\ninterface Props {\n  token: string;\n  artistTopTracks: artistTopTracks;\n  isLoading: boolean;\n  getTrackDetails: (payload: getDetailKey) => void;\n  getTrackParameters: (payload: getDetailKey) => void;\n}\n\nconst ArtistTrackLayout: React.FC<Props> = ({\n  token,\n  artistTopTracks,\n  isLoading,\n  getTrackDetails,\n  getTrackParameters\n}) => {\n\n  const classes = useStyles();\n\n  const handleOnTrackDetails = async (searchId: string) => {\n    const payload: getDetailKey = {\n      trackId: searchId,\n      token: token\n    };\n    await getTrackDetails(payload);\n  }\n\n  const handleOnTrackParameters = async (searchId: string) => {\n    const payload: getDetailKey = {\n      trackId: searchId,\n      token: token\n    };\n    await getTrackParameters(payload);\n  }\n\n  const getDetailInformations = async (searchId: string) => {\n    handleOnTrackDetails(searchId);\n    handleOnTrackParameters(searchId);\n  }\n\n  return (\n    <>\n      { isLoading === false ?\n          <div>\n            <Card className={classes.root}>\n              <LinkComponent src={\"/\"}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<HomeIcon />}\n                  style={{ marginRight: '30px' }}\n                >\n                  Home\n                </Button>\n              </LinkComponent>\n              <CardMedia\n                className={classes.cover}\n                image={artistTopTracks.artist.image}\n                title={artistTopTracks.artist.name}\n              />\n              <div className={classes.details}>\n                <CardContent className={classes.content}>\n                  <h1>{artistTopTracks.artist.name}</h1>\n                </CardContent>\n              </div>\n            </Card>\n          </div>\n          :\n          <CircularIndeterminate />\n      }\n\n      { isLoading === false ?\n        ( artistTopTracks.tracks.length > 0 ? artistTopTracks.tracks.map(tk =>\n          <div key={tk.id} className={classes.tracks}>\n            <ListItem alignItems=\"flex-start\">\n              <ListItemAvatar>\n                <Avatar alt={tk.name} src={tk.image.url} />\n              </ListItemAvatar>\n\n              {/* 表示はできたのでレイアウトを変更する */ }\n              <ListItemText primary={tk.name} />\n              { tk.artists.map((name) => {\n                return <p key={name}>{name+\"/\"}</p>\n              })}\n              <LinkComponent src={`/show/${tk.id}`}>\n                <Button color=\"primary\" size=\"small\" variant=\"contained\"\n                  onClick={() => getDetailInformations(tk.id)}><DetailsIcon /></Button>           \n              </LinkComponent>\n            </ListItem>\n            <Divider variant=\"inset\" />\n          </div>\n          )\n        : \n          <>\n            <div className=\"artist\">\n              <h1>No Result</h1>\n              <img\n                alt=\"NoResultImage\"\n                src=\"https://i.scdn.co/image/ab67616d00001e0268b12ccdf28b19a63645d245\"\n              />\n            </div>\n          </>\n        )\n        : \n        <>\n          <h1></h1>\n        </>\n      }\n    </>\n  )\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  artistTopTracks: state.artist.topTracks,\n  isLoading: state.artist.isLoading\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => \n  bindActionCreators({\n    getTrackDetails: payload => getTrackDetailsAction.start(payload),\n    getTrackParameters: payload => getTrackParametersAction.start(payload),\n  }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ArtistTrackLayout);","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/details/DetailContainer.tsx",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/album-track/AlbumTrackLayout.tsx",["151"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch, bindActionCreators } from \"redux\";\n\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Button from '@material-ui/core/Button';\nimport DetailsIcon from '@material-ui/icons/Details';\n\nimport * as Models from \"../../models/AlbumModel\";\nimport { getDetailKey, ArtistTopTracksRequestKey } from \"../../models/UtilModels\";\nimport { AppState } from \"../../models\";\nimport LinkComponent from \"../LinkComponent\";\nimport { \n  getTrackDetailsAction,\n  getTrackParametersAction\n} from \"../../actions/trackAction\";\nimport {\n  getArtistTopTracksAction\n} from \"../../actions/artistAction\";\nimport HomeIcon from \"../../components/HomeIcon\";\nimport CircularIndeterminate from \"../../components/LoadingSpinner\";\n\n// TODO: Headeing属性にcontentを持たせろという警告が出ているので修正する\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      backgroundColor: 'black',\n      marginTop: 50\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n      textAlign: 'center'\n    },\n    content: {\n      color: 'white',\n    },\n    cover: {\n      width: 300,\n      height: 300,\n    },\n    tracks: {\n      maxWidth: '50%',\n      marginTop: theme.spacing(1),\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    }\n  }),\n);\n\ninterface Props {\n  token: string;\n  albumTracks: Models.albumTracks;\n  isLoading: boolean;\n  getTrackDetails: (payload: getDetailKey) => void;\n  getTrackParameters: (payload: getDetailKey) => void;\n  getArtistTopTracks: (payload: ArtistTopTracksRequestKey) => void;\n}\n\nconst AlbumTrackLayout: React.FC<Props> = ({\n  token,\n  albumTracks,\n  isLoading,\n  getTrackDetails,\n  getTrackParameters,\n  getArtistTopTracks\n}) => {\n\n  const classes = useStyles();\n\n  const handleOnTrackDetails = async (searchId: string) => {\n    const payload: getDetailKey = {\n      trackId: searchId,\n      token: token\n    };\n    await getTrackDetails(payload);\n  }\n\n  const handleOnTrackParameters = async (searchId: string) => {\n    const payload: getDetailKey = {\n      trackId: searchId,\n      token: token\n    };\n    await getTrackParameters(payload);\n  }\n\n  const getDetailInformations = async (searchId: string) => {\n    handleOnTrackDetails(searchId);\n    handleOnTrackParameters(searchId);\n  }\n\n  const handleOnTopTracks = async (name: string, id: string, url: string) => {\n    const payload: ArtistTopTracksRequestKey = {\n      artistId: id,\n      token: token,\n      name: name,\n      image: url\n    };\n    await getArtistTopTracks(payload);\n  }\n\n  const action = (searchId: string) => (\n    <LinkComponent src={`/show/${searchId}`}>\n      <Button size=\"small\" color=\"primary\" onClick={() => getDetailInformations(searchId)}>\n        <DetailsIcon />\n      </Button>           \n    </LinkComponent>\n  );\n  \n  return (\n    <>\n      { isLoading === false ?\n          <div>\n            <Card className={classes.root}>\n              <LinkComponent src={\"/\"}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<HomeIcon />}\n                  style={{ marginRight: '30px' }}\n                >\n                  Home\n                </Button>\n              </LinkComponent>\n              <CardMedia\n                className={classes.cover}\n                image={ albumTracks.album.url }\n                title={ albumTracks.album.name }\n              />\n              <div className={classes.details}>\n                <CardContent className={classes.content}>\n                  <h1>{albumTracks.album.name}</h1>\n                  <LinkComponent src={`/artist/${albumTracks.tracks[0].artistId[0]}`}>\n                    <Button variant=\"contained\"\n                      onClick={() => handleOnTopTracks(\n                      albumTracks.tracks[0].artist[0],\n                      albumTracks.tracks[0].artistId[0],\n                      albumTracks.album.url)}>{albumTracks.tracks[0].artist[0]}</Button>\n                  </LinkComponent>\n                </CardContent>\n              </div>\n            </Card>\n          </div>\n          :\n          <CircularIndeterminate />\n      }\n\n       { isLoading === false ?\n              ( albumTracks.tracks.length > 0 ? albumTracks.tracks.map(tk =>\n               <div key={tk.id} className={classes.tracks}>\n                 <SnackbarContent message={tk.name + \" / \" + tk.artist} action={action(tk.id)} />\n               </div>\n              )\n              : \n              <>\n                <div className=\"artist\">\n                  <h1>No Result</h1>\n                  <img\n                    alt=\"NoResultImage\"\n                    src=\"https://i.scdn.co/image/ab67616d00001e0268b12ccdf28b19a63645d245\"\n                  />\n                </div>\n              </>\n              )\n        : \n        <><h1></h1></>\n      }\n    </>\n  )\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  albumTracks: state.album.albumTracks,\n  isLoading: state.album.isLoading\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => \n  bindActionCreators({\n    getTrackDetails: payload => getTrackDetailsAction.start(payload),\n    getTrackParameters: payload => getTrackParametersAction.start(payload),\n    getArtistTopTracks: payload => getArtistTopTracksAction.start(payload),\n  }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AlbumTrackLayout);","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/sagas/index.ts",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/reducers/index.ts",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/actions/trackAction.ts",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/actions/artistAction.ts",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/styles.tsx",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/AllSearchComponent.tsx",["152"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { searchKey } from \"../models/UtilModels\";\nimport { getAlbumAction } from \"../actions/albumAction\";\nimport { getArtistAction } from \"../actions/artistAction\";\nimport { getTracksAction } from \"../actions/trackAction\";\n\ninterface Props {\n  token: string;\n}\n\ninterface DispathcProps {\n  searchTracks: (payload: searchKey) => void;\n  searchAlbums: (payload: searchKey) => void;\n  searchArtists: (payload: searchKey) => void;\n}\n\ntype DefaultProps = Props & DispathcProps;\n\nconst SearchLayout: React.FC<DefaultProps> = ({\n  token,\n  searchTracks,\n  searchAlbums,\n  searchArtists\n}) => {\n  const [searchWord, setSearchWord] = useState<string>(\"\");\n\n  // TODO: 警告が出ているので修正する\n  useEffect(() => {\n    searchAllData();\n  }, [searchWord])\n\n  const handleOnSearch = async () => {\n    const payload: searchKey = {\n      searchInput: searchWord,\n      token: token\n    };\n    if (payload.searchInput !== \"\") {\n      await searchTracks(payload);\n      await searchAlbums(payload);\n      await searchArtists(payload);\n    }\n  };\n\n  const searchAllData = async () => {\n    if (searchWord !== \"\") {\n      handleOnSearch();\n    } else {\n      handleOnReset();\n    }\n  }\n\n  const handleOnReset = async () => {\n    const payload: searchKey = {\n      searchInput: \" \",\n      token: token\n    };\n    setSearchWord(\"\");\n    await searchTracks(payload);\n    await searchAlbums(payload);\n    await searchArtists(payload);\n  };\n\n  return (\n    <>\n      <input\n        placeholder=\"Type your search\"\n        value={searchWord}\n        onChange={(e) => setSearchWord(e.target.value)}\n      />\n    </>\n  )\n};\n\nconst mapStateToProps = () => ({\n  //\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => \n bindActionCreators({\n  searchTracks: payload => getTracksAction.start(payload),\n  searchAlbums: payload => getAlbumAction.start(payload),\n  searchArtists: payload => getArtistAction.start(payload)\n }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchLayout);\n","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/LinkComponent.tsx",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/details/DetailBasic.tsx",["153","154"],"import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nimport { AppState } from \"../../models\";\nimport * as Models from \"../../models/TrackModel\";\nimport ParamsDescriptionComponent from \"../../components/ParamsDescriptionComponent\";\nimport LinkComponent from \"../LinkComponent\";\nimport HomeIcon from \"../../components/HomeIcon\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      backgroundColor: 'black',\n      marginTop: 50\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n      textAlign: 'center'\n    },\n    content: {\n      color: 'white',\n      marginBottom: \"40px\"\n    },\n    cover: {\n      width: 300,\n      height: 300,\n    },\n    controls: {\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n      height: 38,\n      width: 38,\n    },\n  }),\n);\n\ninterface StateProps {\n  track: Models.trackBasicDetail;\n};\n\nconst DetaiBasic: React.FC<StateProps> = ({\n  track\n}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <LinkComponent src={\"/\"}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<HomeIcon />}\n            style={{ marginRight: '30px' }}\n          >Home</Button>\n        </LinkComponent>\n        <CardMedia\n          className={classes.cover}\n          image={track.image.url}\n          title={track.name}\n        />\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <h1>{track.name}</h1>\n            { track.artists.map((artist) => {\n              return <h2 key={artist}>{ artist }</h2>\n            })}\n          </CardContent>\n          {/* TODO:クリックでサンプルを再生できるようにする */}\n          {/* <div className={classes.controls}>\n            <IconButton aria-label=\"play/pause\">\n              <PlayArrowIcon className={classes.playIcon} />\n            </IconButton>\n          </div> */}\n          <ParamsDescriptionComponent />\n        </div>\n      </Card>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  track: state.track.track\n});\n\nexport default connect(\n  mapStateToProps\n)(DetaiBasic);","/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/details/DetailParamerters.tsx",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/album/AlbumLayoutComponent.tsx",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/artist/ArtistLayoutComponent.tsx",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/containers/track/TrackLayoutComponent.tsx",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/components/LoadingSpinner.tsx",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/components/HomeIcon.tsx",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/sagas/artistSaga.ts",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/sagas/trackSaga.ts",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/sagas/albumSaga.ts",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/reducers/artistReducer.ts",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/reducers/albumReducer.ts",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/reducers/trackReducer.ts",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/constants/spotifyRequestType.ts",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/actions/albumAction.ts",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/components/ParamsDescriptionComponent.tsx",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/apis/artistApi.ts",[],["155","156"],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/apis/tracksApi.ts",[],"/Users/kimitashouichi/develop/react/spotify-app-frontend/front/src/apis/albumApi.ts",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":164,"column":11,"nodeType":"163","endLine":164,"endColumn":15},{"ruleId":"161","severity":1,"message":"162","line":173,"column":11,"nodeType":"163","endLine":173,"endColumn":15},{"ruleId":"164","severity":1,"message":"165","line":33,"column":6,"nodeType":"166","endLine":33,"endColumn":18,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":8,"column":8,"nodeType":"170","messageId":"171","endLine":8,"endColumn":18},{"ruleId":"168","severity":1,"message":"172","line":10,"column":8,"nodeType":"170","messageId":"171","endLine":10,"endColumn":21},{"ruleId":"157","replacedBy":"173"},{"ruleId":"159","replacedBy":"174"},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchAllData'. Either include it or remove the dependency array.","ArrayExpression",["177"],"@typescript-eslint/no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'PlayArrowIcon' is defined but never used.",["175"],["176"],"no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},"Update the dependencies array to be: [searchAllData, searchWord]",{"range":"180","text":"181"},[866,878],"[searchAllData, searchWord]"]