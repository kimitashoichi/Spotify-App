[{"/front/src/index.tsx":"1","/front/src/reportWebVitals.ts":"2","/front/src/App.tsx":"3","/front/src/containers/LoginLayout.tsx":"4","/front/src/configureStore.ts":"5","/front/src/reducers/index.ts":"6","/front/src/sagas/index.ts":"7","/front/src/reducers/trackReducer.ts":"8","/front/src/sagas/trackSaga.ts":"9","/front/src/constants/spotifyRequestType.ts":"10","/front/src/apis/tracksApi.ts":"11","/front/src/reducers/albumReducer.ts":"12","/front/src/reducers/artistReducer.ts":"13","/front/src/sagas/artistSaga.ts":"14","/front/src/apis/artistApi.ts":"15","/front/src/sagas/albumSaga.ts":"16","/front/src/apis/albumApi.ts":"17","/front/src/containers/track/TrackSearchLayout.tsx":"18","/front/src/containers/track/TrackLayoutComponent.tsx":"19","/front/src/containers/track/TrackCotainer.tsx":"20","/front/src/containers/artist/ArtistContainer.tsx":"21","/front/src/containers/artist/ArtistLayoutComponent.tsx":"22","/front/src/containers/artist/ArtistSearchLayout.tsx":"23","/front/src/containers/album/AlbumContainer.tsx":"24","/front/src/containers/album/AlbumLayoutComponent.tsx":"25","/front/src/containers/album/AlbumSearchLayout.tsx":"26","/front/src/containers/TopLayout.tsx":"27","/front/src/containers/styles.tsx":"28","/front/src/models/TrackModel.ts":"29","/front/src/actions/trackAction.ts":"30","/front/src/containers/details/DetailBasic.tsx":"31","/front/src/containers/LinkComponent.tsx":"32","/front/src/containers/details/DetailContainer.tsx":"33","/front/src/containers/details/DetailParamerters.tsx":"34","/front/src/models/ArtistModel.ts":"35","/front/src/containers/artist-track/ArtistTrackLayout.tsx":"36","/front/src/actions/artistAction.ts":"37","/front/src/actions/albumAction.ts":"38","/front/src/containers/album-track/AlbumTrackLayout.tsx":"39"},{"size":713,"mtime":1607382840204,"results":"40","hashOfConfig":"41"},{"size":425,"mtime":1607000525983,"results":"42","hashOfConfig":"41"},{"size":1561,"mtime":1608459415560,"results":"43","hashOfConfig":"41"},{"size":769,"mtime":1607342840145,"results":"44","hashOfConfig":"41"},{"size":796,"mtime":1607382840203,"results":"45","hashOfConfig":"41"},{"size":479,"mtime":1607520939012,"results":"46","hashOfConfig":"41"},{"size":275,"mtime":1607520939015,"results":"47","hashOfConfig":"41"},{"size":1864,"mtime":1607691971046,"results":"48","hashOfConfig":"41"},{"size":1991,"mtime":1607852070053,"results":"49","hashOfConfig":"41"},{"size":1642,"mtime":1608362882457,"results":"50","hashOfConfig":"41"},{"size":2440,"mtime":1608359019563,"results":"51","hashOfConfig":"41"},{"size":1327,"mtime":1608452338115,"results":"52","hashOfConfig":"41"},{"size":1396,"mtime":1608457367565,"results":"53","hashOfConfig":"41"},{"size":1510,"mtime":1608362882462,"results":"54","hashOfConfig":"41"},{"size":1778,"mtime":1608457887143,"results":"55","hashOfConfig":"41"},{"size":1426,"mtime":1608362882462,"results":"56","hashOfConfig":"41"},{"size":1877,"mtime":1608452338111,"results":"57","hashOfConfig":"41"},{"size":1600,"mtime":1607691971045,"results":"58","hashOfConfig":"41"},{"size":2817,"mtime":1607952284891,"results":"59","hashOfConfig":"41"},{"size":410,"mtime":1607691971044,"results":"60","hashOfConfig":"41"},{"size":417,"mtime":1608359019565,"results":"61","hashOfConfig":"41"},{"size":2206,"mtime":1608457618263,"results":"62","hashOfConfig":"41"},{"size":1633,"mtime":1608362882460,"results":"63","hashOfConfig":"41"},{"size":409,"mtime":1608362882458,"results":"64","hashOfConfig":"41"},{"size":2085,"mtime":1608452338113,"results":"65","hashOfConfig":"41"},{"size":1598,"mtime":1608362882459,"results":"66","hashOfConfig":"41"},{"size":1867,"mtime":1607605135894,"results":"67","hashOfConfig":"41"},{"size":1024,"mtime":1607605135897,"results":"68","hashOfConfig":"41"},{"size":3382,"mtime":1607691971046,"results":"69","hashOfConfig":"41"},{"size":1658,"mtime":1607691971041,"results":"70","hashOfConfig":"41"},{"size":2023,"mtime":1608452338113,"results":"71","hashOfConfig":"41"},{"size":329,"mtime":1607851357385,"results":"72","hashOfConfig":"41"},{"size":749,"mtime":1607952284890,"results":"73","hashOfConfig":"41"},{"size":4417,"mtime":1607952284890,"results":"74","hashOfConfig":"41"},{"size":2337,"mtime":1607989264667,"results":"75","hashOfConfig":"41"},{"size":4997,"mtime":1608459347047,"results":"76","hashOfConfig":"41"},{"size":1183,"mtime":1608362882455,"results":"77","hashOfConfig":"41"},{"size":1039,"mtime":1608452338111,"results":"78","hashOfConfig":"41"},{"size":4277,"mtime":1608452338112,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1jjtmvb",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"/front/src/index.tsx",[],["169","170"],"/front/src/reportWebVitals.ts",[],"/front/src/App.tsx",[],"/front/src/containers/LoginLayout.tsx",[],"/front/src/configureStore.ts",["171","172"],"import { applyMiddleware, createStore } from \"redux\";\nimport { History } from \"history\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { compose } from '@material-ui/system';\n\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./reducers\";\nimport { ExtendedWindow } from \"./reduxDevToolExtensionType\";\n\ndeclare var window: ExtendedWindow;\n\nexport default function configureStore (history: History) {\n  const sagaMiddleware = createSagaMiddleware();\n  const composeReduxDevToolExtension = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const enhanser = composeReduxDevToolExtension(applyMiddleware(sagaMiddleware));\n\n  const store = createStore(\n    rootReducer(history),\n    enhanser\n  );\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n\n","/front/src/reducers/index.ts",[],"/front/src/sagas/index.ts",[],"/front/src/reducers/trackReducer.ts",[],"/front/src/sagas/trackSaga.ts",[],"/front/src/constants/spotifyRequestType.ts",[],"/front/src/apis/tracksApi.ts",[],"/front/src/reducers/albumReducer.ts",[],"/front/src/reducers/artistReducer.ts",[],"/front/src/sagas/artistSaga.ts",["173"],"import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\n\nimport * as Model from \"../models/ArtistModel\";\nimport * as ActionTypes from \"../constants/spotifyRequestType\";\nimport * as API from \"../apis/artistApi\";\nimport {\n  getArtistAction,\n  getArtistTopTracksAction\n} from \"../actions/artistAction\";\nimport { Action } from 'history';\n\nexport function* getArtistSaga (action: Model.GetArtistStart) {\n  const accsessKey = action.payload;\n  const handler = API.getArtist;\n  const { artist, error } = yield call(handler, accsessKey);\n  if (artist && !error) {\n    console.log(\"success get artist list!\");\n    yield put(getArtistAction.success(artist));\n  } else {\n    console.log(\"fail get artist list!\");\n    yield put(getArtistAction.failure());\n  }\n};\n\nexport function* getArtistTopTracksSaga (action: Model.GetArtistTopTracksStart) {\n  const accsessKey = action.payload;\n  const handler = API.getArtistTopTracks;\n  const { topTracks, error } = yield call(handler, accsessKey);\n  if (topTracks && !error) {\n    console.log(\"success get artist topTracks!\");\n    yield put(getArtistTopTracksAction.success(topTracks));\n  } else {\n    console.log(\"fail get artist topTracks!\");\n    yield put(getArtistTopTracksAction.failure());\n  }\n};\n\nexport function* watchArtists () {\n  yield takeEvery(ActionTypes.GET_ARTISTS_START, getArtistSaga);\n  yield takeEvery(ActionTypes.GET_ARTIST_TOP_TRACK_START, getArtistTopTracksSaga)\n};\n\nexport default function* rootSaga () {\n  yield all([fork(watchArtists)]);\n};\n","/front/src/apis/artistApi.ts",["174"],"/front/src/sagas/albumSaga.ts",[],"/front/src/apis/albumApi.ts",[],"/front/src/containers/track/TrackSearchLayout.tsx",["175"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { getTracksAction } from \"../../actions/searchTrackAction\";\nimport * as Model from \"../../models/TrackModel\";\nimport { AppState } from \"../../models\";\n\n\ninterface Props {\n  token: string;\n}\n\ninterface DispathcProps {\n  searchTracks: (payload: Model.searchKey) => void;\n}\n\ntype DefaultProps = Props & DispathcProps;\n\nconst TrackSearchLayout: React.FC<DefaultProps> = ({\n  token,\n  searchTracks\n}) => {\n  const [searchWord, setSearchWord] = useState<string>(\"\");\n\n  useEffect(() => {\n    handleOnInput();\n  }, [searchWord])\n\n  const handleOnInput = async () => {\n    const payload: Model.searchKey = {\n      searchInput: searchWord,\n      token: token\n    };\n    if (payload.searchInput !== \"\") {\n      await searchTracks(payload);\n    }\n  };\n\n  const handleOnReset = async () => {\n    const payload: Model.searchKey = {\n      searchInput: \" \",\n      token: token\n    };\n    setSearchWord(\"\");\n    await searchTracks(payload);\n  }\n\n  return (\n    <>\n      <input\n        placeholder=\"Input Keyword...\"\n        value={searchWord}\n        onChange={(e) => setSearchWord(e.target.value)}\n      />\n      <button onClick={handleOnReset}>Reset</button>\n    </>\n  )\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  //\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => \n bindActionCreators({\n  searchTracks: payload => getTracksAction.start(payload)\n }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TrackSearchLayout);\n","/front/src/containers/track/TrackLayoutComponent.tsx",[],"/front/src/containers/track/TrackCotainer.tsx",[],"/front/src/containers/artist/ArtistContainer.tsx",[],"/front/src/containers/artist/ArtistLayoutComponent.tsx",[],"/front/src/containers/artist/ArtistSearchLayout.tsx",["176","177","178"],"import React, { useState, FormEvent, useEffect, ChangeEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { getArtistAction } from \"../../actions/artistAction\";\nimport * as Model from \"../../models/ArtistModel\";\nimport { AppState } from \"../../models\";\n\n\ninterface Props {\n  token: string;\n}\n\ninterface DispathcProps {\n  searchArtists: (payload: Model.searchKey) => void;\n}\n\ntype DefaultProps = Props & DispathcProps;\n\nconst ArtistSearchLayout: React.FC<DefaultProps> = ({\n  token,\n  searchArtists\n}) => {\n  const [searchWord, setSearchWord] = useState<string>(\"\");\n\n  useEffect(() => {\n    handleOnInput();\n  }, [searchWord])\n\n  const handleOnInput = async () => {\n    const payload: Model.searchKey = {\n      searchInput: searchWord,\n      token: token\n    };\n    if (payload.searchInput !== \"\") {\n      await searchArtists(payload);\n    }\n  };\n\n  const handleOnReset = async () => {\n    const payload: Model.searchKey = {\n      searchInput: \" \",\n      token: token\n    };\n    setSearchWord(\"\");\n    await searchArtists(payload);\n  }\n\n  return (\n    <>\n      <input\n        placeholder=\"Input Keyword...\"\n        value={searchWord}\n        onChange={(e) => setSearchWord(e.target.value)}\n      />\n      <button onClick={handleOnReset}>Reset</button>\n    </>\n  )\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  //\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => \n bindActionCreators({\n  searchArtists: payload => getArtistAction.start(payload)\n }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ArtistSearchLayout);\n","/front/src/containers/album/AlbumContainer.tsx",[],"/front/src/containers/album/AlbumLayoutComponent.tsx",[],"/front/src/containers/album/AlbumSearchLayout.tsx",["179"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { getAlbumAction } from \"../../actions/albumAction\";\nimport * as Model from \"../../models/AlbumModel\";\nimport { AppState } from \"../../models\";\n\n\ninterface Props {\n  token: string;\n}\n\ninterface DispathcProps {\n  searchAlbums: (payload: Model.searchKey) => void;\n}\n\ntype DefaultProps = Props & DispathcProps;\n\nconst AlbumSearchLayout: React.FC<DefaultProps> = ({\n  token,\n  searchAlbums\n}) => {\n  const [searchWord, setSearchWord] = useState<string>(\"\");\n\n  useEffect(() => {\n    handleOnInput();\n  }, [searchWord])\n\n  const handleOnInput = async () => {\n    const payload: Model.searchKey = {\n      searchInput: searchWord,\n      token: token\n    };\n    if (payload.searchInput !== \"\") {\n      await searchAlbums(payload);\n    }\n  };\n\n  const handleOnReset = async () => {\n    const payload: Model.searchKey = {\n      searchInput: \" \",\n      token: token\n    };\n    setSearchWord(\"\");\n    await searchAlbums(payload);\n  }\n\n  return (\n    <>\n      <input\n        placeholder=\"Input Keyword...\"\n        value={searchWord}\n        onChange={(e) => setSearchWord(e.target.value)}\n      />\n      <button onClick={handleOnReset}>Reset</button>\n    </>\n  )\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  //\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => \n bindActionCreators({\n  searchAlbums: payload => getAlbumAction.start(payload)\n }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AlbumSearchLayout);\n","/front/src/containers/TopLayout.tsx",[],"/front/src/containers/styles.tsx",[],"/front/src/models/TrackModel.ts",[],["180","181"],"/front/src/actions/trackAction.ts",[],"/front/src/containers/details/DetailBasic.tsx",["182"],"import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Theme, createStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nimport { AppState } from \"../../models\";\nimport * as Models from \"../../models/TrackModel\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      backgroundColor: 'black',\n      marginTop: 50\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n      textAlign: 'center'\n    },\n    content: {\n      color: 'white',\n    },\n    cover: {\n      width: 300,\n      height: 300,\n    },\n    controls: {\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n      height: 38,\n      width: 38,\n    },\n  }),\n);\n\ninterface StateProps {\n  track: Models.trackType;\n};\n\nconst DetaiBasic: React.FC<StateProps> = ({\n  track\n}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardMedia\n          className={classes.cover}\n          image={track.image.url}\n          title={track.name}\n        />\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <h1>{track.name}</h1>\n            <h2>{track.artists}</h2>\n          </CardContent>\n          <div className={classes.controls}>\n            <IconButton aria-label=\"play/pause\">\n              <PlayArrowIcon className={classes.playIcon} />\n            </IconButton>\n          </div>\n        </div>\n      </Card>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  track: state.track.track\n});\n\nexport default connect(\n  mapStateToProps\n)(DetaiBasic);","/front/src/containers/LinkComponent.tsx",[],"/front/src/containers/details/DetailContainer.tsx",[],"/front/src/containers/details/DetailParamerters.tsx",["183","184","185","186","187","188"],"import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../../models\";\nimport * as Models from \"../../models/TrackModel\";\n\ninterface StateProps {\n  track: Models.trackParams;\n};\n\nconst DetaiParamslLayout: React.FC<StateProps> = ({\n  track\n}) => {\n  return (\n    <>\n      <h1 style={{color: 'white'}}>\n        OK SHOW TRACK DETAIL PARAMS COMPONENT!\n      </h1>\n      <p>{ track.acousticness }</p>\n      <p>{ track.danceability }</p>\n      <p>{ track.energy }</p>\n      <p>{ track.instrumentalness }</p>\n      <p>{ track.liveness }</p>\n      <p>{ track.valence }</p>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  track: state.track.trackParams\n});\n\nexport default connect(\n  mapStateToProps\n)(DetaiParamslLayout);","/front/src/models/ArtistModel.ts",[],["189","190"],"/front/src/containers/artist-track/ArtistTrackLayout.tsx",["191"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch, bindActionCreators } from \"redux\";\n\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport * as Models from \"../../models/TrackModel\";\nimport { artistTopTracks } from \"../../models/ArtistModel\";\nimport { AppState } from \"../../models\";\nimport LinkComponent from \"../LinkComponent\";\nimport { \n  getTrackDetailsAction,\n  getTrackParametersAction\n} from \"../../actions/trackAction\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      backgroundColor: 'black',\n      marginTop: 50\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n      textAlign: 'center'\n    },\n    content: {\n      color: 'white',\n    },\n    cover: {\n      width: 300,\n      height: 300,\n    },\n    tracks: {\n      maxWidth: '50%',\n      marginTop: theme.spacing(1),\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    }\n  }),\n);\n\n\ninterface Props {\n  token: string;\n  artistTopTracks: artistTopTracks;\n  isLoading: boolean;\n  getTrackDetails: (payload: Models.getDetailKey) => void;\n  getTrackParameters: (payload: Models.getDetailKey) => void;\n}\n\nconst ArtistTrackLayout: React.FC<Props> = ({\n  token,\n  artistTopTracks,\n  isLoading,\n  getTrackDetails,\n  getTrackParameters\n}) => {\n\n  const classes = useStyles();\n\n  const handleOnTrackDetails = async (searchId: string) => {\n    const payload: Models.getDetailKey = {\n      trackId: searchId,\n      token: token\n    };\n    await getTrackDetails(payload);\n  }\n\n  const handleOnTrackParameters = async (searchId: string) => {\n    const payload: Models.getDetailKey = {\n      trackId: searchId,\n      token: token\n    };\n    await getTrackParameters(payload);\n  }\n\n  const getDetailInformations = async (searchId: string) => {\n    handleOnTrackDetails(searchId);\n    handleOnTrackParameters(searchId);\n  }\n\n  const action = (searchId: string) => (\n    <LinkComponent src={`/show/${searchId}`}>\n      <Button color=\"secondary\" size=\"small\" onClick={() => getDetailInformations(searchId)}>\n        Go Detail\n      </Button>           \n    </LinkComponent>\n  );\n\n\n  return (\n    <>\n          { isLoading === false ?\n          <div>\n            <Card className={classes.root}>\n              <CardMedia\n                className={classes.cover}\n                image={artistTopTracks.artist.image}\n                title={artistTopTracks.artist.name}\n              />\n              <div className={classes.details}>\n                <CardContent className={classes.content}>\n                  <h1>{artistTopTracks.artist.name}</h1>\n                </CardContent>\n              </div>\n            </Card>\n          </div>\n          :\n          <h1>Now Loading ....</h1>\n      }\n\n       { isLoading === false ?\n              ( artistTopTracks.tracks.length > 0 ? artistTopTracks.tracks.map(tk =>\n               <div key={tk.id} className={classes.tracks}>\n                 <ListItem alignItems=\"flex-start\">\n                   <ListItemAvatar>\n                     <Avatar alt={tk.name} src={tk.image.url} />\n                  </ListItemAvatar>\n                  <ListItemText primary={tk.name} />\n                  <LinkComponent src={`/show/${tk.id}`}>\n                    <Button color=\"secondary\" size=\"small\" onClick={() => getDetailInformations(tk.id)}>\n                      Go Detail\n                    </Button>           \n                  </LinkComponent>\n                 </ListItem>\n                 <Divider variant=\"inset\" />\n               </div>\n              )\n              : \n                <>\n                  <div className=\"artist\">\n                    <h1>No Result</h1>\n                    <img\n                      alt=\"NoResultImage\"\n                      src=\"https://i.scdn.co/image/ab67616d00001e0268b12ccdf28b19a63645d245\"\n                    />\n                  </div>\n                </>\n              )\n        : \n        <>\n          <h1>Now Loading....</h1>\n        </>\n      }\n    </>\n  )\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  artistTopTracks: state.artist.topTracks,\n  isLoading: state.artist.isLoading\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => \n  bindActionCreators({\n    getTrackDetails: payload => getTrackDetailsAction.start(payload),\n    getTrackParameters: payload => getTrackParametersAction.start(payload),\n  }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ArtistTrackLayout);","/front/src/actions/artistAction.ts",[],"/front/src/actions/albumAction.ts",[],"/front/src/containers/album-track/AlbumTrackLayout.tsx",[],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":14,"column":67,"nodeType":"198","messageId":"199","endLine":14,"endColumn":69},{"ruleId":"196","severity":1,"message":"197","line":14,"column":114,"nodeType":"198","messageId":"199","endLine":14,"endColumn":116},{"ruleId":"200","severity":1,"message":"201","line":10,"column":10,"nodeType":"202","messageId":"203","endLine":10,"endColumn":16},{"ruleId":"200","severity":1,"message":"204","line":4,"column":13,"nodeType":"202","messageId":"203","endLine":4,"endColumn":23},{"ruleId":"205","severity":1,"message":"206","line":28,"column":6,"nodeType":"207","endLine":28,"endColumn":18,"suggestions":"208"},{"ruleId":"200","severity":1,"message":"209","line":1,"column":27,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"210","line":1,"column":49,"nodeType":"202","messageId":"203","endLine":1,"endColumn":60},{"ruleId":"205","severity":1,"message":"206","line":28,"column":6,"nodeType":"207","endLine":28,"endColumn":18,"suggestions":"211"},{"ruleId":"205","severity":1,"message":"206","line":28,"column":6,"nodeType":"207","endLine":28,"endColumn":18,"suggestions":"212"},{"ruleId":"192","replacedBy":"213"},{"ruleId":"194","replacedBy":"214"},{"ruleId":"200","severity":1,"message":"215","line":4,"column":43,"nodeType":"202","messageId":"203","endLine":4,"endColumn":51},{"ruleId":"200","severity":1,"message":"216","line":4,"column":49,"nodeType":"202","messageId":"203","endLine":4,"endColumn":64},{"ruleId":"200","severity":1,"message":"217","line":12,"column":8,"nodeType":"202","messageId":"203","endLine":12,"endColumn":17},{"ruleId":"200","severity":1,"message":"218","line":17,"column":8,"nodeType":"202","messageId":"203","endLine":17,"endColumn":17},{"ruleId":"200","severity":1,"message":"219","line":18,"column":8,"nodeType":"202","messageId":"203","endLine":18,"endColumn":18},{"ruleId":"200","severity":1,"message":"220","line":19,"column":8,"nodeType":"202","messageId":"203","endLine":19,"endColumn":21},{"ruleId":"200","severity":1,"message":"221","line":84,"column":9,"nodeType":"202","messageId":"203","endLine":84,"endColumn":14},{"ruleId":"192","replacedBy":"222"},{"ruleId":"194","replacedBy":"223"},{"ruleId":"200","severity":1,"message":"224","line":94,"column":9,"nodeType":"202","messageId":"203","endLine":94,"endColumn":15},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","@typescript-eslint/no-unused-vars","'Action' is defined but never used.","Identifier","unusedVar","'TrackModel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleOnInput'. Either include it or remove the dependency array.","ArrayExpression",["227"],"'FormEvent' is defined but never used.","'ChangeEvent' is defined but never used.",["228"],["229"],["225"],["226"],"'useTheme' is defined but never used.","'PolarRadiusAxis' is defined but never used.","'TableHead' is defined but never used.","'CardMedia' is defined but never used.","'IconButton' is defined but never used.","'PlayArrowIcon' is defined but never used.","'theme' is assigned a value but never used.",["225"],["226"],"'action' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"230","fix":"232"},{"desc":"230","fix":"233"},"Update the dependencies array to be: [handleOnInput, searchWord]",{"range":"234","text":"235"},{"range":"236","text":"235"},{"range":"237","text":"235"},[661,673],"[handleOnInput, searchWord]",[684,696],[654,666]]